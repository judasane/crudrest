{"ts":1359248790230,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":true,"ts":1359248795235,"patch":[[{"diffs":[[1,"import cherrypy\r\nfrom cherrypy.lib.cptools import accept\r\nfrom models import Photoblog\r\nfrom lib import conf\r\nfrom lib.tools import find_acceptable_within\r\nclass Resource(object):\r\n    def handle_GET(self, obj_id):\r\n        best = accept(['application/xml', 'application/atom+xml',\r\n                       'text/json', 'text/x-json',\r\n                       'application/json'])"]],"start1":0,"start2":0,"length1":0,"length2":378}]],"length":378,"saved":false}
{"ts":1359248805603,"patch":[[{"diffs":[[0,"/json'])"],[1,"\r\n                       "]],"start1":370,"start2":370,"length1":8,"length2":33}]],"length":403,"saved":false}
{"ts":1359248808193,"patch":[[{"diffs":[[0,"son'])\r\n"],[-1,"                       "],[1,"obj = self.__source_class.fetch(obj_id)\r\n        if not obj:\r\n           raise cherrypy.NotFound()\r\n           \r\n        if best in ['application/xml', 'application/atom+xml']:\r\n           cherrypy.response.headers['Content-Type'] = \r\n                                                'application/atom+xml'\r\n           entry = obj.to_atom_entry()\r\n           return entry.xml()\r\n           \r\n        if best in ['text/json', 'text/x-json', 'application/json']:\r\n           cherrypy.response.headers['Content-Type'] =\r\n           'application/json'\r\n           return obj.to_json()\r\n        \r\n        raise cherrypy.HTTPError(400, 'Bad Request')\r\n    def handle_POST(self container_cls, container_id,\r\n                    location_scheme, *args, **kwargs):\r\n        container = container_cls.fetch(container_id)\r\n        if not container:\r\n           raise cherrypy.NotFound()\r\n          \r\n        obj = self.__source_class()\r\n        obj.create(container, *args, **kwargs)\r\n        cherrypy.response.status = '201 Created'\r\n        cherrypy.response.headers['Location'] = location_scheme %\r\n        (conf.app.base_url, obj.ID)\r\n    def handle_PUT(cls, source_cls, obj_id, *args, **kwargs):\r\n        obj = self.__source_class.fetch(obj_id)\r\n        if not obj:\r\n           raise cherrypy.NotFound()\r\n        \r\n        obj.update(obj, *args, **kwargs)\r\n    def handle_DELETE(cls, source_cls, obj_id):\r\n        obj = self.__source_class.fetch(obj_id)\r\n        if obj:\r\n            obj.delete(obj)\r\n        cherrypy.response.status = '204 No Content'"]],"start1":372,"start2":372,"length1":31,"length2":1553}]],"length":1925,"saved":false}
{"ts":1359248815964,"patch":[[{"diffs":[[0,"son'])\r\n"],[1,"        "],[0,"obj = se"]],"start1":372,"start2":372,"length1":16,"length2":24}]],"length":1933,"saved":false}
{"ts":1359248830740,"patch":[[{"diffs":[[0,"Content'"],[1,"\r\n        "]],"start1":1925,"start2":1925,"length1":8,"length2":18}]],"length":1943,"saved":false}
{"ts":1359248836017,"patch":[[{"diffs":[[0,"ntent'\r\n"],[-1,"        "],[1,"from models import Photoblog, Album\r\nfrom _resource import Resource\r\nclass AlbumRESTService(Resource):\r\n    exposed = True\r\n    # The entity class that will be used by the Resource class\r\n    _source_class = Album\r\n    def GET(self, album_id):\r\n        return self.handle_GET(album_id)\r\n        \r\n    def POST(self, title, segment, author, description, content,\r\n             blog_id):\r\n        self.handle_POST(Photoblog, blog_id, '%s/album/%d',\r\n                         title, segment, author, description,content)\r\n        \r\n    def PUT(self, album_id, title, segment, author, description,\r\n            content):\r\n        self.handle_PUT(album_id,\r\n                         title, segment, author, description, content)\r\n        \r\n    def DELETE(self, album_id):\r\n        self.handle_DELETE(album_id)"]],"start1":1927,"start2":1927,"length1":16,"length2":812}]],"length":2739,"saved":false}
{"ts":1359248862733,"patch":[[{"diffs":[[0,"ype'] = "],[-1,"\r\n"],[0,"        "]],"start1":613,"start2":613,"length1":18,"length2":16}]],"length":2737,"saved":false}
{"ts":1359248868065,"patch":[[{"diffs":[[0,"'] ="],[-1,"                                                 "],[0,"'app"]],"start1":616,"start2":616,"length1":57,"length2":8}]],"length":2688,"saved":false}
{"ts":1359248896177,"patch":[[{"diffs":[[0,"Type'] ="],[-1,"\r\n           "],[0,"'applica"]],"start1":844,"start2":844,"length1":29,"length2":16}]],"length":2675,"saved":false}
{"ts":1359248912909,"patch":[[{"diffs":[[0,"iner_id,"],[-1,"\r\n                    "],[0,"location"]],"start1":1014,"start2":1014,"length1":38,"length2":16}]],"length":2653,"saved":false}
{"ts":1359248924067,"patch":[[{"diffs":[[0,"iner_id,"],[1,"\r\n                    "],[0,"location"]],"start1":1014,"start2":1014,"length1":16,"length2":38}]],"length":2675,"saved":false}
{"ts":1359248998083,"patch":[[{"diffs":[[0,"n'])"],[-1,"\r\n        obj = self.__source_class.fetch(obj_id)\r\n        if not obj:\r\n           raise cherrypy.NotFound()\r\n           \r\n        if best in ['application/xml', 'application/atom+xml']:\r\n           cherrypy.response.headers['Content-Type'] ='application/atom+xml'\r\n           entry = obj.to_atom_entry()\r\n           return entry.xml()\r\n           \r\n        if best in ['text/json', 'text/x-json', 'application/json']:\r\n           cherrypy.response.headers['Content-Type'] ='application/json'\r\n           return obj.to_json()\r\n        \r\n        raise cherrypy.HTTPError(400, 'Bad Request')\r\n    def handle_POST(self container_cls, container_id,\r\n                    location_scheme, *args, **kwargs):\r\n        container = container_cls.fetch(container_id)\r\n        if not container:\r\n           raise cherrypy.NotFound()\r\n          \r\n        obj = self.__source_class()\r\n        obj.create(container, *args, **kwargs)\r\n        cherrypy.response.status = '201 Created'\r\n        cherrypy.response.headers['Location'] = location_scheme %\r\n        (conf.app.base_url, obj.ID)\r\n    def handle_PUT(cls, source_cls, obj_id, *args, **kwargs):\r\n        obj = self.__source_class.fetch(obj_id)\r\n        if not obj:\r\n           raise cherrypy.NotFound()\r\n        \r\n        obj.update(obj, *args, **kwargs)\r\n    def handle_DELETE(cls, source_cls, obj_id):\r\n        obj = self.__source_class.fetch(obj_id)\r\n        if obj:\r\n            obj.delete(obj)\r\n        cherrypy.response.status = '204 No Content'\r\nfrom models import Photoblog, Album\r\nfrom _resource import Resource\r\nclass AlbumRESTService(Resource):\r\n    exposed = True\r\n    # The entity class that will be used by the Resource class\r\n    _source_class = Album\r\n    def GET(self, album_id):\r\n        return self.handle_GET(album_id)\r\n        \r\n    def POST(self, title, segment, author, description, content,\r\n             blog_id):\r\n        self.handle_POST(Photoblog, blog_id, '%s/album/%d',\r\n                         title, segment, author, description,content)\r\n        \r\n    def PUT(self, album_id, title, segment, author, description,\r\n            content):\r\n        self.handle_PUT(album_id,\r\n                         title, segment, author, description, content)\r\n        \r\n    def DELETE(self, album_id):\r\n        self.handle_DELETE(album_id)"]],"start1":374,"start2":374,"length1":2301,"length2":4}]],"length":378,"saved":false}
{"ts":1359248999610,"patch":[[{"diffs":[[0,"/json'])"],[1,"\r\n                       "]],"start1":370,"start2":370,"length1":8,"length2":33}]],"length":403,"saved":false}
{"ts":1359249002101,"patch":[[{"diffs":[[0,"'])\r\n                       "],[1,"\r\n                       "]],"start1":375,"start2":375,"length1":28,"length2":53}]],"length":428,"saved":false}
{"ts":1359249026313,"patch":[[{"diffs":[[0,"son'])\r\n"],[-1,"                       "],[1,"\r\n\r\n\r\n"],[0,"\r\n      "]],"start1":372,"start2":372,"length1":39,"length2":22}]],"length":411,"saved":false}
{"ts":1359249029454,"patch":[[{"diffs":[[0,"son'])\r\n\r\n\r\n"],[1,"obj = self.__source_class.fetch(obj_id)\r\n        if not obj:\r\n           raise cherrypy.NotFound()\r\n           \r\n        if best in ['application/xml', 'application/atom+xml']:\r\n           cherrypy.response.headers['Content-Type'] = \r\n                                                'application/atom+xml'\r\n           entry = obj.to_atom_entry()\r\n           return entry.xml()\r\n           \r\n        if best in ['text/json', 'text/x-json', 'application/json']:\r\n           cherrypy.response.headers['Content-Type'] =\r\n           'application/json'\r\n           return obj.to_json()\r\n        \r\n        raise cherrypy.HTTPError(400, 'Bad Request')\r\n    def handle_POST(self container_cls, container_id,\r\n                    location_scheme, *args, **kwargs):\r\n        container = container_cls.fetch(container_id)\r\n        if not container:\r\n           raise cherrypy.NotFound()\r\n          \r\n        obj = self.__source_class()\r\n        obj.create(container, *args, **kwargs)\r\n        cherrypy.response.status = '201 Created'\r\n        cherrypy.response.headers['Location'] = location_scheme %\r\n        (conf.app.base_url, obj.ID)\r\n    def handle_PUT(cls, source_cls, obj_id, *args, **kwargs):\r\n        obj = self.__source_class.fetch(obj_id)\r\n        if not obj:\r\n           raise cherrypy.NotFound()\r\n        \r\n        obj.update(obj, *args, **kwargs)\r\n    def handle_DELETE(cls, source_cls, obj_id):\r\n        obj = self.__source_class.fetch(obj_id)\r\n        if obj:\r\n            obj.delete(obj)\r\n        cherrypy.response.status = '204 No Content'"],[0,"\r\n\r\n        "]],"start1":372,"start2":372,"length1":24,"length2":1569}]],"length":1956,"saved":false}
{"ts":1359249033228,"patch":[[{"diffs":[[0,"])\r\n\r\n\r\n"],[1,"    "],[0,"obj = se"]],"start1":376,"start2":376,"length1":16,"length2":20}]],"length":1960,"saved":false}
{"ts":1359249035152,"patch":[[{"diffs":[[0,"son'])\r\n\r\n\r\n"],[1,"    "],[0,"    obj = se"]],"start1":372,"start2":372,"length1":24,"length2":28}]],"length":1964,"saved":false}
{"ts":1359249039982,"patch":[[{"diffs":[[0,"son'])\r\n"],[-1,"\r\n\r\n"],[0,"        "]],"start1":372,"start2":372,"length1":20,"length2":16}]],"length":1960,"saved":false}
{"ts":1359249081428,"patch":[[{"diffs":[[0,"']:\r\n           "],[1," "],[0,"cherrypy.respons"]],"start1":561,"start2":561,"length1":32,"length2":33}]],"length":1961,"saved":false}
{"ts":1359249098659,"patch":[[{"diffs":[[0,"bj:\r\n           "],[1,"    "],[0,"raise cherrypy.N"]],"start1":445,"start2":445,"length1":32,"length2":36}]],"length":1965,"saved":false}
{"ts":1359249100084,"patch":[[{"diffs":[[0,"j:\r\n        "],[-1,"       "],[0,"raise cherry"]],"start1":446,"start2":446,"length1":31,"length2":24}]],"length":1958,"saved":false}
{"ts":1359249100988,"patch":[[{"diffs":[[0,"t obj:\r\n        "],[1,"    "],[0,"raise cherrypy.N"]],"start1":442,"start2":442,"length1":32,"length2":36}]],"length":1962,"saved":false}
{"ts":1359249107822,"patch":[[{"diffs":[[0,"m+xml'\r\n"],[-1,"       "],[0,"    entr"]],"start1":689,"start2":689,"length1":23,"length2":16},{"diffs":[[0,"om_entry()\r\n"],[-1,"       "],[0,"    return e"]],"start1":718,"start2":718,"length1":31,"length2":24}]],"length":1948,"saved":false}
{"ts":1359249112792,"patch":[[{"diffs":[[0,"j:\r\n        "],[-1,"    "],[0,"raise cherry"]],"start1":446,"start2":446,"length1":28,"length2":24},{"diffs":[[0,"m+xml'\r\n"],[1,"       "],[0,"    entr"]],"start1":685,"start2":685,"length1":16,"length2":23},{"diffs":[[0,"om_entry()\r\n"],[1,"       "],[0,"    return e"]],"start1":721,"start2":721,"length1":24,"length2":31}]],"length":1958,"saved":false}
{"ts":1359249114505,"patch":[[{"diffs":[[0,"t obj:\r\n        "],[1,"    "],[0,"raise cherrypy.N"]],"start1":442,"start2":442,"length1":32,"length2":36}]],"length":1962,"saved":false}
{"ts":1359249118426,"patch":[[{"diffs":[[0,"        "],[-1,"   "],[0,"entry = "]],"start1":697,"start2":697,"length1":19,"length2":16},{"diffs":[[0,"om_entry()\r\n"],[-1,"   "],[0,"        retu"]],"start1":722,"start2":722,"length1":27,"length2":24}]],"length":1956,"saved":false}
{"ts":1359249120147,"patch":[[{"diffs":[[0,"        "],[1,"    "],[0,"entry = "]],"start1":697,"start2":697,"length1":16,"length2":20},{"diffs":[[0,"om_entry()\r\n"],[1,"    "],[0,"        retu"]],"start1":726,"start2":726,"length1":24,"length2":28}]],"length":1964,"saved":false}
{"ts":1359249123938,"patch":[[{"diffs":[[0,"']:\r\n           "],[1," "],[0,"cherrypy.respons"]],"start1":848,"start2":848,"length1":32,"length2":33},{"diffs":[[0,"] =\r\n           "],[1," "],[0,"'application/jso"]],"start1":905,"start2":905,"length1":32,"length2":33},{"diffs":[[0,"/json'\r\n"],[1," "],[0,"        "]],"start1":934,"start2":934,"length1":16,"length2":17}]],"length":1967,"saved":false}
{"ts":1359249132124,"patch":[[{"diffs":[[0,"ype'] = "],[-1,"\r\n"],[0,"        "]],"start1":615,"start2":615,"length1":18,"length2":16}]],"length":1965,"saved":false}
{"ts":1359249135432,"patch":[[{"diffs":[[0,"'] ="],[-1,"                                               "],[0,"  'a"]],"start1":618,"start2":618,"length1":55,"length2":8}]],"length":1918,"saved":false}
{"ts":1359249139829,"patch":[[{"diffs":[[0,"Type'] ="],[-1,"\r\n"],[0,"        "]],"start1":851,"start2":851,"length1":18,"length2":16}]],"length":1916,"saved":false}
{"ts":1359249143484,"patch":[[{"diffs":[[0,"Type'] ="],[-1,"           "],[0," 'applic"]],"start1":851,"start2":851,"length1":27,"length2":16}]],"length":1905,"saved":false}
{"ts":1359249156922,"patch":[[{"diffs":[[0,"iner_id,"],[-1,"\r\n"],[0,"        "]],"start1":1023,"start2":1023,"length1":18,"length2":16}]],"length":1903,"saved":false}
{"ts":1359249159711,"patch":[[{"diffs":[[0,"iner_id,"],[-1,"                    "],[0,"location"]],"start1":1023,"start2":1023,"length1":36,"length2":16}]],"length":1883,"saved":false}
{"ts":1359249165762,"patch":[[{"diffs":[[0,"**kwargs):\r\n"],[-1,"    "],[0,"    containe"]],"start1":1055,"start2":1055,"length1":28,"length2":24},{"diffs":[[0,"tainer_id)\r\n"],[-1,"    "],[0,"    if not c"]],"start1":1106,"start2":1106,"length1":28,"length2":24}]],"length":1875,"saved":false}
{"ts":1359249167820,"patch":[[{"diffs":[[0,"**kwargs):\r\n"],[1,"    "],[0,"    containe"]],"start1":1055,"start2":1055,"length1":24,"length2":28},{"diffs":[[0,"tainer_id)\r\n"],[1,"    "],[0,"    if not c"]],"start1":1110,"start2":1110,"length1":24,"length2":28}]],"length":1883,"saved":false}
{"ts":1359249171822,"patch":[[{"diffs":[[0,"ainer:\r\n        "],[-1,"   "],[0,"raise cherrypy.N"]],"start1":1141,"start2":1141,"length1":35,"length2":32}]],"length":1880,"saved":false}
{"ts":1359249173187,"patch":[[{"diffs":[[0,"ainer:\r\n        "],[1,"    "],[0,"raise cherrypy.N"]],"start1":1141,"start2":1141,"length1":32,"length2":36}]],"length":1884,"saved":false}
{"ts":1359249177780,"patch":[[{"diffs":[[0,"uest')\r\n"],[-1,"    "],[0,"def hand"]],"start1":970,"start2":970,"length1":20,"length2":16}]],"length":1880,"saved":false}
{"ts":1359249179190,"patch":[[{"diffs":[[0,"uest')\r\n"],[1,"    "],[0,"def hand"]],"start1":970,"start2":970,"length1":16,"length2":20}]],"length":1884,"saved":false}
{"ts":1359249198507,"patch":[[{"diffs":[[0,"uest')\r\n"],[-1,"    "],[0,"def hand"]],"start1":970,"start2":970,"length1":20,"length2":16}]],"length":1880,"saved":false}
{"ts":1359249200089,"patch":[[{"diffs":[[0,"uest')\r\n"],[1,"        "],[0,"def hand"]],"start1":970,"start2":970,"length1":16,"length2":24}]],"length":1888,"saved":false}
{"ts":1359249202389,"patch":[[{"diffs":[[0,"uest')\r\n"],[-1,"    "],[0,"    def "]],"start1":970,"start2":970,"length1":20,"length2":16}]],"length":1884,"saved":false}
{"ts":1359249204583,"patch":[[{"diffs":[[0,"uest')\r\n"],[1,"    "],[0,"    def "]],"start1":970,"start2":970,"length1":16,"length2":20}]],"length":1888,"saved":false}
{"ts":1359249205382,"patch":[[{"diffs":[[0,"uest')\r\n"],[1,"        \r\n"],[0,"        "]],"start1":970,"start2":970,"length1":16,"length2":26}]],"length":1898,"saved":false}
{"ts":1359249206243,"patch":[[{"diffs":[[0,"\r\n        \r\n"],[-1,"    "],[0,"    def hand"]],"start1":976,"start2":976,"length1":28,"length2":24}]],"length":1894,"saved":false}
{"ts":1359249214193,"patch":[[{"diffs":[[0,".to_json()\r\n"],[-1,"        \r\n"],[0,"        rais"]],"start1":902,"start2":902,"length1":34,"length2":24}]],"length":1884,"saved":false}
{"ts":1359249215895,"patch":[[{"diffs":[[0,"json()\r\n"],[-1,"        "],[0,"raise ch"]],"start1":906,"start2":906,"length1":24,"length2":16}]],"length":1876,"saved":false}
{"ts":1359249217177,"patch":[[{"diffs":[[0,"json()\r\n"],[1,"        "],[0,"raise ch"]],"start1":906,"start2":906,"length1":16,"length2":24}]],"length":1884,"saved":false}
{"ts":1359249220619,"patch":[[{"diffs":[[0,"json()\r\n        "],[1,"    "],[0,"raise cherrypy.H"]],"start1":906,"start2":906,"length1":32,"length2":36}]],"length":1888,"saved":false}
{"ts":1359249229177,"patch":[[{"diffs":[[0,"json()\r\n        "],[-1,"    "],[0,"raise cherrypy.H"]],"start1":906,"start2":906,"length1":36,"length2":32}]],"length":1884,"saved":false}
{"ts":1359249244140,"patch":[[{"diffs":[[0,"bj.ID)\r\n"],[1,"        \r\n"],[0,"    def "]],"start1":1431,"start2":1431,"length1":16,"length2":26}]],"length":1894,"saved":false}
{"ts":1359249247673,"patch":[[{"diffs":[[0," **kwargs)\r\n"],[1,"        \r\n"],[0,"    def hand"]],"start1":1660,"start2":1660,"length1":24,"length2":34}]],"length":1904,"saved":false}
{"ts":1359249249626,"patch":[[{"diffs":[[0,"rgs)\r\n        \r\n"],[1,"        \r\n"],[0,"    def handle_D"]],"start1":1666,"start2":1666,"length1":32,"length2":42}]],"length":1914,"saved":false}
{"ts":1359249268568,"patch":[[{"diffs":[[0,"OST(self"],[1,","],[0," contain"]],"start1":994,"start2":994,"length1":16,"length2":17}]],"length":1915,"saved":false}
{"ts":1359249292825,"patch":[[{"diffs":[[0,"scheme %"],[-1,"\r\n      "],[0,"  (conf."]],"start1":1393,"start2":1393,"length1":24,"length2":16}]],"length":1907,"saved":false}
{"ts":1359249327923,"patch":[[{"diffs":[[0,"dle_PUT("],[1,"self,"],[0,"cls, sou"]],"start1":1453,"start2":1453,"length1":16,"length2":21}]],"length":1912,"saved":false}
{"ts":1359249431848,"patch":[[{"diffs":[[0,"thin"],[-1,"\r\nclass Resource(object):\r\n    def handle_GET(self, obj_id):\r\n        best = accept(['application/xml', 'application/atom+xml',\r\n                       'text/json', 'text/x-json',\r\n                       'application/json'])\r\n        obj = self.__source_class.fetch(obj_id)\r\n        if not obj:\r\n            raise cherrypy.NotFound()\r\n           \r\n        if best in ['application/xml', 'application/atom+xml']:\r\n            cherrypy.response.headers['Content-Type'] =  'application/atom+xml'\r\n            entry = obj.to_atom_entry()\r\n            return entry.xml()\r\n           \r\n        if best in ['text/json', 'text/x-json', 'application/json']:\r\n            cherrypy.response.headers['Content-Type'] = 'application/json'\r\n            return obj.to_json()\r\n        raise cherrypy.HTTPError(400, 'Bad Request')\r\n        \r\n    def handle_POST(self, container_cls, container_id,location_scheme, *args, **kwargs):\r\n        container = container_cls.fetch(container_id)\r\n        if not container:\r\n            raise cherrypy.NotFound()\r\n          \r\n        obj = self.__source_class()\r\n        obj.create(container, *args, **kwargs)\r\n        cherrypy.response.status = '201 Created'\r\n        cherrypy.response.headers['Location'] = location_scheme %  (conf.app.base_url, obj.ID)\r\n        \r\n    def handle_PUT(self,cls, source_cls, obj_id, *args, **kwargs):\r\n        obj = self.__source_class.fetch(obj_id)\r\n        if not obj:\r\n           raise cherrypy.NotFound()\r\n        \r\n        obj.update(obj, *args, **kwargs)\r\n        \r\n        \r\n    def handle_DELETE(cls, source_cls, obj_id):\r\n        obj = self.__source_class.fetch(obj_id)\r\n        if obj:\r\n            obj.delete(obj)\r\n        cherrypy.response.status = '204 No Content'\r\n\r\n                       "]],"start1":150,"start2":150,"length1":1762,"length2":4}]],"length":154,"saved":false}
{"ts":1359249433683,"patch":[[{"diffs":[[0,"e_within"],[1,"\r\n\r\n"]],"start1":146,"start2":146,"length1":8,"length2":12}]],"length":158,"saved":false}
{"ts":1359249446294,"patch":[[{"diffs":[[0,"thin\r\n\r\n"],[1,"class Resource(object):\r\n"]],"start1":150,"start2":150,"length1":8,"length2":33}]],"length":183,"saved":false}
{"ts":1359249456493,"patch":[[{"diffs":[[0,"ject):\r\n"],[1,"    def handle_GET(self, obj_id):\r\n        best = accept(['application/xml', 'application/atom+xml',\r\n                       'text/json', 'text/x-json',\r\n                       'application/json'])\r\n"]],"start1":175,"start2":175,"length1":8,"length2":207}]],"length":382,"saved":false}
{"ts":1359249460659,"patch":[[{"diffs":[[0,"ject):\r\n"],[-1,"    "],[0,"def hand"]],"start1":175,"start2":175,"length1":20,"length2":16}]],"length":378,"saved":false}
{"ts":1359249462520,"patch":[[{"diffs":[[0,"ject):\r\n"],[1,"    "],[0,"def hand"]],"start1":175,"start2":175,"length1":16,"length2":20}]],"length":382,"saved":false}
{"ts":1359249485521,"patch":[[{"diffs":[[0,"+xml',\r\n"],[-1,"                       "],[0,"'text/js"]],"start1":277,"start2":277,"length1":39,"length2":16}]],"length":359,"saved":false}
{"ts":1359249488444,"patch":[[{"diffs":[[0,"+xml',\r\n"],[1,"                        "],[0,"'text/js"]],"start1":277,"start2":277,"length1":16,"length2":40}]],"length":383,"saved":false}
{"ts":1359249494127,"patch":[[{"diffs":[[0,"        "],[1," "],[0,"'applica"]],"start1":353,"start2":353,"length1":16,"length2":17}]],"length":384,"saved":false}
{"ts":1359249497191,"patch":[[{"diffs":[[0,"son'])\r\n"],[1,"                        \r\n                        \r\n"]],"start1":376,"start2":376,"length1":8,"length2":60}]],"length":436,"saved":false}
