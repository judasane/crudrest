{"ts":1359241535366,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"# -*- coding: utf-8 -*-\nimport os\nfrom sqlalchemy import Column\nfrom sqlalchemy import Integer\nfrom sqlalchemy import String\nfrom sqlalchemy import create_engine\nfrom sqlalchemy.ext.declarative import declarative_base\nfrom sqlalchemy.orm import sessionmaker\n\nBase = declarative_base()\n\nclass Usuario(Base):\n    \"Inicializa el objeto Usuario con los datos pertinentes\"\n    \n    __tablename__ = 'users'\n\n    id = Column(Integer, primary_key=True)\n    nombre = Column(String(50))\n    apellido = Column(String(50))\n    username = Column(String(50))\n    email = Column(String(150))\n    password = Column(String(32))\n\n    def __init__(self, nombre, apellido, username, email, password):\n                \n        self.nombre = nombre\n        self.apellido = apellido\n        self.username = username\n        self.email = email\n        self.password = password\n    def toDict(self):\n        dic = {}\n        dic[\"id\"] = self.id\n        dic[\"nombre\"] = self.nombre\n        dic[\"apellido\"] = self.apellido\n        dic[\"username\"] = self.username\n        dic[\"email\"] = self.email\n        dic[\"password\"] = self.password\n        return dic\n    #  def __repr__(self):\n\t#\treturn \"ID: %s\\nNombre: %s \\nApellido: %s\\n Username: %s\\nPassword: %s\\nEmail: %s\\n\\n\" % (self.id,self.nombre,self.apellido,self.username,self.password,self.email)\n\n    def update(self, diccionario):\n        \"\"\"\n        Actualiza el usuario a partir de un diccionario de registros de la forma\n        atributo:valor\n        \"\"\"\n        for propiedad, valor in diccionario.iteritems():\n            if propiedad == \"nombre\":\n                self.nombre = valor\n            elif propiedad == \"apellido\":\n                self.apellido = valor\n            elif propiedad == \"username\":\n                self.username = valor\n            elif propiedad == \"email\":\n                self.email = valor\n            elif propiedad == \"password\":\n                self.password = valor\n        return \"exito\"\n\nclass Role(Base):\n    __tablename__ = 'roles'\n\n    id = Column(Integer, primary_key=True)\n    nombre = Column(String(50))\n    descripcion = Column(String)\n\n    def __init__(self, nombre, descripcion):\n        self.nombre = nombre\n        self.descripcion = descripcion\n\n    def toDict(self):\n        dic = {}\n        dic[\"id\"] = self.id\n        dic[\"nombre\"] = self.nombre\n        dic[\"descripcion\"] = self.descripcion\n        return dic\n        \nclass Permission(Base):\n    __tablename__ = 'Permissions'\n\n    id = Column(Integer, primary_key=True)\n    nombre = Column(String(50))\n    descripcion = Column(String)\n\n    def __init__(self, nombre, descripcion):\n        self.nombre = nombre\n        self.descripcion = descripcion\n\n    def toDict(self):\n        dic = {}\n        dic[\"id\"] = self.id\n        dic[\"nombre\"] = self.nombre\n        dic[\"descripcion\"] = self.descripcion\n        return dic\n        \nclass RolesPermissions(Base):\n    __tablename__ = \"roles_permissions\"\n    id_role = Column(Integer, primary_key=True)\n    id_permission = Column(Integer)\n    \n    def __init__(self, id_role, id_permission):\n        self.id_role = id_role\n        self.id_permission = id_permission\n        \nclass UsersRoles(Base):\n    __tablename__ = \"users_roles\"\n    id_user = Column(Integer, primary_key=True)\n    id_role = Column(Integer)\n    \n    def __init__(self, id_user, id_role):\n        self.id_user = id_user\n        self.id_role = id_role\n       \n\n\nclass DatabaseManager:\n    \"\"\"\n    Clase que se encarga de gestionar las comunicaciones con la base de datos.\n    \n    Recibe como parámetros el esquema y el motor.\n    \"\"\"\n    Session = None\n    ses = None\n    \n    def __init__(self, esquema, motor):\n        if motor.lower() == \"mysql\":\n\t\t\tif os.name == \"posix\":\n\t\t\t\tclave = \"noentrar\"\n\t\t\telse:\n\t\t\t\tclave = \"\"\n\t\t\tengine = create_engine(\"mysql://root:\" + clave + \"@127.0.0.1/\" + esquema + \"?charset=utf8\", echo=False)\n        self.Session = sessionmaker(bind=engine)\n        self.ses = self.Session()\n\n    def crearUsuario(self, nombre, apellido, username, email, password, roles):\n\n        usuario = Usuario(nombre, apellido, username, email, password)\n        self.ses.add(usuario)\n        self.ses.commit()\n        if type(roles) == list:\n            for id in roles:\n                relacion = UsersRoles(usuario.id, id)\n                self.ses.add(relacion)\n        else:\n            relacion = UsersRoles(usuario.id, roles)\n            self.ses.add(relacion)\n        self.ses.commit()\n        print type(roles)\n    \n    def crearRol(self, nombre, descripcion, permisos):\n    \n        rol = Role(nombre, descripcion)\n        self.ses.add(rol)\n        self.ses.commit()\n        if type(permisos) == list:\n            for id in permisos:\n                relacion = RolesPermissions(rol.id, id)\n                self.ses.add(relacion)\n        else:\n            relacion = RolesPermissions(rol.id, permisos)\n            self.ses.add(relacion)\n        self.ses.commit()\n    \n    def crearPermiso(self, nombre, descripcion):\n        permiso = Permission(nombre, descripcion)\n        self.ses.add(permiso)\n        self.ses.commit()\n\n\n    def obtenerDatos(self, tabla):\n        \"\"\"\n        Devuelve los datos de una tabla por medio de una lista.\n\n        Recibe como parámetro el nombre de la tabla a la cual acceder.\n\n        Retorna una lista de diccionarios cada uno lleno con conjuntos clave-valor\n        que hacen referencia a los atributos de los objetos dto propios de la\n        consulta\n        \"\"\"\n        lista = []\n        consulta = None\n        if tabla.lower() == \"users\":\n            consulta = self.ses.query(Usuario)\n        elif tabla.lower() == \"permissions\":\n            consulta = self.ses.query(Permission)\n        elif tabla.lower() == \"roles\":\n            consulta = self.ses.query(Role)\n        for instancia in consulta:\n            diccionario = instancia.toDict()\n            lista.append(diccionario)\n        return lista\n\n    def eliminar(self, modulo, id):\n        \"\"\"\n        Elimina un registro de la base de datos.\n\n        Recibe como parámetro el nmbre del módulo del cual se está accediendo.\n\n        Retorna un mesaje con el estado de la transacción.\n        \"\"\"\n        if modulo == \"permisos\":\n            instancia = self.ses.query(Permission).filter_by(id=id).first()\n        elif modulo == \"roles\":\n            instancia = self.ses.query(Role).filter_by(id=id).first()\n        elif modulo == \"usuarios\":\n            instancia = self.ses.query(Usuario).filter_by(id=id).first()\n        retorno = \"El registro %s fué eliminado\" % id\n        try:\n            self.ses.delete(instancia)\n            self.ses.commit()\n        except Exception, e:\n            retorno = \"Ha ocurrido un error al intentar eliminar:\", e\n        return retorno\n\n    def update(self, id,diccionario):\n        instancia = None\n        modulo = \"usuarios\"\n        if modulo == \"permisos\":\n            instancia = self.ses.query(Permission).filter_by(id=id).first()\n        elif modulo == \"roles\":\n            instancia = self.ses.query(Role).filter_by(id=id).first()\n        elif modulo == \"usuarios\":\n            instancia = self.ses.query(Usuario).filter_by(id=id).first()\n        retorno = \"El registro %s fué actualizado\" % id\n        instancia.update(diccionario)\n        self.ses.add(instancia)\n        self.ses.commit()\n#        except Exception, e:\n#            retorno = \"Ha ocurrido un error al intentar eliminar:\", e\n        return retorno\n       \n\nif __name__ == \"__main__\":\n    dbmm = DatabaseManager(\"WeBD\", \"MySql\")\n    print dbmm.update(82,{\"email\":\"jochepe@gmail.com\",\"apellido\":\"cambiado\"})\n    "]],"start1":0,"start2":0,"length1":0,"length2":7584}]],"length":7584}
{"contributors":[],"silentsave":true,"ts":1359242008659,"patch":[[{"diffs":[[0,"l://"],[-1,"root"],[1,"sibismark"],[0,":\" +"]],"start1":3800,"start2":3800,"length1":12,"length2":17}]],"length":7589,"saved":false}
{"ts":1359242014825,"patch":[[{"diffs":[[0,"+ \"@"],[-1,"127.0.0.1"],[1,"sibismark.db.10388322.hostedresource.com"],[0,"/\" +"]],"start1":3824,"start2":3824,"length1":17,"length2":48}]],"length":7620,"saved":false}
{"ts":1359242028383,"patch":[[{"diffs":[[0,"lave = \""],[1,"P"],[0,"\"\n\t\t\teng"]],"start1":3759,"start2":3759,"length1":16,"length2":17}]],"length":7621,"saved":false}
{"ts":1359242030138,"patch":[[{"diffs":[[0,"ave = \"P"],[1,"ruebas201"],[0,"\"\n\t\t\teng"]],"start1":3760,"start2":3760,"length1":16,"length2":25}]],"length":7630,"saved":false}
{"ts":1359242031710,"patch":[[{"diffs":[[0,"uebas201"],[1,"3!"],[0,"\"\n\t\t\teng"]],"start1":3769,"start2":3769,"length1":16,"length2":18}]],"length":7632,"saved":false}
{"ts":1359242042012,"patch":[[{"diffs":[[0,"self"],[-1,", esquema, motor"],[0,"):\n "]],"start1":3636,"start2":3636,"length1":24,"length2":8}]],"length":7616,"saved":false}
{"ts":1359242074097,"patch":[[{"diffs":[[0,"f):\n"],[-1,"        if motor.lower() == \"mysql\":\n\t\t\tif os.name == \"posix\":\n\t\t\t\tclave = \"noentrar\"\n\t\t\telse:\n"],[0,"\t\t\t\t"]],"start1":3639,"start2":3639,"length1":103,"length2":8}]],"length":7521,"saved":false}
{"ts":1359242076637,"patch":[[{"diffs":[[0,"lf):\n\t\t\t"],[-1,"\t"],[0,"clave = "]],"start1":3638,"start2":3638,"length1":17,"length2":16}]],"length":7520,"saved":false}
{"ts":1359242081775,"patch":[[{"diffs":[[0,"\n\t\t\t"],[-1,"clave = \"Pruebas2013!\"\n\t\t\ten"],[0,"gine"]],"start1":3642,"start2":3642,"length1":36,"length2":8}]],"length":7492,"saved":false}
{"ts":1359242083038,"patch":[[{"diffs":[[0,"lf):\n\t\t\t"],[1,"clave = \"Pruebas2013!\"\n\t\t\ten"],[0,"gine = c"]],"start1":3638,"start2":3638,"length1":16,"length2":44}]],"length":7520,"saved":false}
{"ts":1359242086315,"patch":[[{"diffs":[[0,"elf):\n\t\t"],[-1,"\t"],[0,"clave = "]],"start1":3637,"start2":3637,"length1":17,"length2":16},{"diffs":[[0,"s2013!\"\n"],[-1,"\t"],[0,"\t\tengine"]],"start1":3660,"start2":3660,"length1":17,"length2":16}]],"length":7518,"saved":false}
{"ts":1359242103003,"patch":[[{"diffs":[[0,"com/\" + "],[-1,"esquema"],[0," + \"?cha"]],"start1":3763,"start2":3763,"length1":23,"length2":16}]],"length":7511,"saved":false}
{"ts":1359242104128,"patch":[[{"diffs":[[0,"ce.com/\""],[-1," +"],[0,"  + \"?ch"]],"start1":3760,"start2":3760,"length1":18,"length2":16}]],"length":7509,"saved":false}
{"ts":1359242107931,"patch":[[{"diffs":[[0,"rce.com/"],[1,"sibismark"],[0,"\"  + \"?c"]],"start1":3759,"start2":3759,"length1":16,"length2":25}]],"length":7518,"saved":false}
{"ts":1359242316092,"patch":[[{"diffs":[[0,"om/sibis"],[-1,"mark"],[0,"\"  + \"?c"]],"start1":3764,"start2":3764,"length1":20,"length2":16}]],"length":7514,"saved":false}
{"ts":1359242320431,"patch":[[{"diffs":[[0,"(self):\n"],[1,"        if motor.lower() == \"mysql\":\n\t\t\tif os.name == \"posix\":\n\t\t\t\tclave = \"noentrar\"\n\t\t\telse:\n\t\t"],[0,"\t\tclave "]],"start1":3635,"start2":3635,"length1":16,"length2":113},{"diffs":[[0,"s2013!\"\n"],[1,"\t"],[0,"\t\tengine"]],"start1":3757,"start2":3757,"length1":16,"length2":17},{"diffs":[[0,"com/"],[-1,"sibis\" "],[1,"\" + esquema"],[0," + \""]],"start1":3861,"start2":3861,"length1":15,"length2":19}]],"length":7616,"saved":false}
{"ts":1359242322813,"patch":[[{"diffs":[[0,"_init__(self"],[1,", r"],[0,"):\n        i"]],"start1":3628,"start2":3628,"length1":24,"length2":27}]],"length":7619,"saved":false}
{"ts":1359242324739,"patch":[[{"diffs":[[0,"_(self, "],[1,"oto"],[0,"r):\n    "]],"start1":3634,"start2":3634,"length1":16,"length2":19}]],"length":7622,"saved":false}
{"ts":1359242349569,"patch":[[{"diffs":[[0,"    "],[-1,"if motor.lower() == \"mysql\":\n\t\t\tif os.name == \"posix\":\n\t\t\t\tclave = \"noentrar\"\n\t\t\telse:\n"],[0,"\t\t\t\t"]],"start1":3653,"start2":3653,"length1":95,"length2":8}]],"length":7535,"saved":false}
{"ts":1359242350510,"patch":[[{"diffs":[[0,"       \t"],[-1,"\t\t\t"],[0,"clave = "]],"start1":3650,"start2":3650,"length1":19,"length2":16}]],"length":7532,"saved":false}
{"ts":1359242351846,"patch":[[{"diffs":[[0,"        "],[-1,"\t"],[0,"clave = "]],"start1":3649,"start2":3649,"length1":17,"length2":16}]],"length":7531,"saved":false}
{"ts":1359242353528,"patch":[[{"diffs":[[0,"013!\"\n\t\t"],[-1,"\t"],[0,"engine ="]],"start1":3674,"start2":3674,"length1":17,"length2":16}]],"length":7530,"saved":false}
{"ts":1359242381098,"patch":[[{"diffs":[[0,"    "],[-1,"clave = \"Pruebas2013!\"\n\t\t"],[0,"engi"]],"start1":3653,"start2":3653,"length1":33,"length2":8}]],"length":7505,"saved":false}
{"ts":1359242382228,"patch":[[{"diffs":[[0,"        "],[1,"clave = \"Pruebas2013!\"\n\t\t"],[0,"engine ="]],"start1":3649,"start2":3649,"length1":16,"length2":41}]],"length":7530,"saved":false}
{"ts":1359242388738,"patch":[[{"diffs":[[0," otor):\n"],[-1,"        "],[0,"clave = "]],"start1":3641,"start2":3641,"length1":24,"length2":16},{"diffs":[[0,"3!\"\n"],[-1,"\t\t"],[0,"engi"]],"start1":3668,"start2":3668,"length1":10,"length2":8}]],"length":7520,"saved":false}
{"ts":1359242391454,"patch":[[{"diffs":[[0," otor):\n"],[1,"    "],[0,"clave = "]],"start1":3641,"start2":3641,"length1":16,"length2":20}]],"length":7524,"saved":false}
{"ts":1359242395066,"patch":[[{"diffs":[[0," otor):\n"],[1,"    "],[0,"    clav"]],"start1":3641,"start2":3641,"length1":16,"length2":20}]],"length":7528,"saved":false}
{"ts":1359242398555,"patch":[[{"diffs":[[0,"s2013!\"\n"],[1,"        "],[0,"engine ="]],"start1":3672,"start2":3672,"length1":16,"length2":24}]],"length":7536,"saved":false}
{"ts":1359242405586,"patch":[[{"diffs":[[0," otor):\n"],[-1,"        "],[0,"clave = "]],"start1":3641,"start2":3641,"length1":24,"length2":16},{"diffs":[[0,"s2013!\"\n"],[-1,"        "],[0,"engine ="]],"start1":3664,"start2":3664,"length1":24,"length2":16},{"diffs":[[0,"=False)\n"],[-1,"        "],[0,"self.Ses"]],"start1":3804,"start2":3804,"length1":24,"length2":16},{"diffs":[[0,"engine)\n"],[-1,"        "],[0,"self.ses"]],"start1":3845,"start2":3845,"length1":24,"length2":16}]],"length":7504,"saved":false}
{"ts":1359242406818,"patch":[[{"diffs":[[0," otor):\n"],[1,"        "],[0,"clave = "]],"start1":3641,"start2":3641,"length1":16,"length2":24},{"diffs":[[0,"s2013!\"\n"],[1,"        "],[0,"engine ="]],"start1":3672,"start2":3672,"length1":16,"length2":24},{"diffs":[[0,"=False)\n"],[1,"        "],[0,"self.Ses"]],"start1":3820,"start2":3820,"length1":16,"length2":24},{"diffs":[[0,"engine)\n"],[1,"        "],[0,"self.ses"]],"start1":3869,"start2":3869,"length1":16,"length2":24}]],"length":7536,"saved":false}
{"ts":1359242419064,"patch":[[{"diffs":[[0,"rce.com/"],[1,"sibismark"],[0,"\" + esqu"]],"start1":3777,"start2":3777,"length1":16,"length2":25}]],"length":7545,"saved":false}
{"ts":1359242422254,"patch":[[{"diffs":[[0,"k\" +"],[-1," esquema +"],[0," \"?c"]],"start1":3793,"start2":3793,"length1":18,"length2":8}]],"length":7535,"saved":false}
{"ts":1359242457737,"patch":[[{"diffs":[[0,"elf,"],[-1," otor"],[0,"):\n "]],"start1":3637,"start2":3637,"length1":13,"length2":8}]],"length":7530,"saved":false}
{"ts":1359242459024,"patch":[[{"diffs":[[0,"t__(self"],[-1,","],[0,"):\n     "]],"start1":3632,"start2":3632,"length1":17,"length2":16}]],"length":7529,"saved":false}
{"ts":1359242483506,"patch":[[{"diffs":[[0,"ger("],[-1,"\"WeBD\", \"MySql\""],[0,")\n  "]],"start1":7426,"start2":7426,"length1":23,"length2":8}]],"length":7514,"saved":false}
{"contributors":[],"silentsave":true,"ts":1359243164773,"patch":[[{"diffs":[[0," Usuario(Bas"],[1,",  "],[0,"e):\n    \"Ini"]],"start1":291,"start2":291,"length1":24,"length2":27}]],"length":7517,"saved":false}
{"contributors":[],"silentsave":true,"ts":1359243301435,"patch":[[{"diffs":[[0,"_base()\n"],[1,"#"],[0,"\nclass U"]],"start1":277,"start2":277,"length1":16,"length2":17}]],"length":7518,"saved":false}
{"ts":1359243303808,"patch":[[{"diffs":[[0,"base()\n#"],[1,"qUe"],[0,"\nclass U"]],"start1":278,"start2":278,"length1":16,"length2":19}]],"length":7521,"saved":false}
{"ts":1359243309516,"patch":[[{"diffs":[[0,"e()\n#qUe"],[1," M"],[0,"\nclass U"]],"start1":281,"start2":281,"length1":16,"length2":18}]],"length":7523,"saved":false}
{"ts":1359243310632,"patch":[[{"diffs":[[0,")\n#qUe M"],[1,"a"],[0,"\nclass U"]],"start1":283,"start2":283,"length1":16,"length2":17}]],"length":7524,"saved":false}
{"ts":1359243312383,"patch":[[{"diffs":[[0,"\n#qUe Ma"],[1,"S"],[0,"\nclass U"]],"start1":284,"start2":284,"length1":16,"length2":17}]],"length":7525,"saved":false}
{"ts":1359243316056,"patch":[[{"diffs":[[0,"#qUe MaS"],[1,"?"],[0,"\nclass U"]],"start1":285,"start2":285,"length1":16,"length2":17}]],"length":7526,"saved":false}
{"ts":1359243318446,"patch":[[{"diffs":[[0,"Ue MaS?\n"],[1,"\n"],[0,"class Us"]],"start1":287,"start2":287,"length1":16,"length2":17}]],"length":7527,"saved":false}
{"ts":1359243330458,"patch":[[{"diffs":[[0,"e MaS?\n\n"],[1,"\n"],[0,"class Us"]],"start1":288,"start2":288,"length1":16,"length2":17}]],"length":7528,"saved":false}
{"ts":1359243347134,"patch":[[{"diffs":[[0,"qUe MaS?"],[1,"HhhhhHhhhhgGg"],[0,"\n\n\nclass"]],"start1":286,"start2":286,"length1":16,"length2":29}]],"length":7541,"saved":false}
{"ts":1359243362233,"patch":[[{"diffs":[[0,"HhhhhgGg"],[1," "],[0,"\n\n\nclass"]],"start1":299,"start2":299,"length1":16,"length2":17}]],"length":7542,"saved":false}
{"contributors":[],"silentsave":false,"ts":1359243515072,"patch":[[{"diffs":[[0,"e()\n"],[-1,"#qUe MaS?HhhhhHhhhhgGg \n\n\n"],[0,"clas"]],"start1":281,"start2":281,"length1":34,"length2":8},{"diffs":[[0,"(Bas"],[-1,",  "],[0,"e):\n"]],"start1":298,"start2":298,"length1":11,"length2":8}]],"length":7513,"saved":false}
{"contributors":[],"silentsave":true,"ts":1359324482867,"patch":[[{"diffs":[[0,"ionmaker"],[1,"\nimpor"],[0,"\n\nBase ="]],"start1":249,"start2":249,"length1":16,"length2":22}]],"length":7519,"saved":false}
{"ts":1359324483915,"patch":[[{"diffs":[[0,"er\nimpor"],[1,"t json"],[0,"\n\nBase ="]],"start1":255,"start2":255,"length1":16,"length2":22}]],"length":7525,"saved":false}
{"ts":1359324501888,"patch":[[{"diffs":[[0," dbm"],[-1,"m.update(82,{\"email\":\"jochepe@gmail.com\",\"apellido\":\"cambiado\"})"],[1,"."],[0,"\n   "]],"start1":7452,"start2":7452,"length1":72,"length2":9}]],"length":7462,"saved":false}
{"ts":1359324505095,"patch":[[{"diffs":[[0,"int "],[-1,"dbm."],[1,"json"],[0,"\n   "]],"start1":7449,"start2":7449,"length1":12,"length2":12}]],"length":7462,"saved":false}
{"ts":1359324508192,"patch":[[{"diffs":[[0,"int json"],[1,".d"],[0,"\n    "]],"start1":7449,"start2":7449,"length1":13,"length2":15}]],"length":7464,"saved":false}
{"ts":1359324510926,"patch":[[{"diffs":[[0,"t json.d"],[1,"u"],[0,"\n    "]],"start1":7451,"start2":7451,"length1":13,"length2":14}]],"length":7465,"saved":false}
{"ts":1359324512766,"patch":[[{"diffs":[[0," json.du"],[1,"mp("],[0,"\n    "]],"start1":7452,"start2":7452,"length1":13,"length2":16}]],"length":7468,"saved":false}
{"ts":1359324521277,"patch":[[{"diffs":[[0,"on.dump("],[1,"dbmm.o"],[0,"\n    "]],"start1":7455,"start2":7455,"length1":13,"length2":19}]],"length":7474,"saved":false}
{"ts":1359324561053,"patch":[[{"diffs":[[0,"p(dbmm.o"],[1,"btenerDatos("],[0,"\n    "]],"start1":7461,"start2":7461,"length1":13,"length2":25}]],"length":7486,"saved":false}
{"ts":1359324572960,"patch":[[{"diffs":[[0,"erDatos("],[1,"\"users\"))"],[0,"\n    "]],"start1":7473,"start2":7473,"length1":13,"length2":22}]],"length":7495,"saved":false}
{"contributors":[],"silentsave":true,"ts":1359327393685,"patch":[[{"diffs":[[0,"on\n\n"],[-1,"Base = declarative_base()\nclass Usuario(Base):\n    \"Inicializa el objeto Usuario con los datos pertinentes\"\n    \n    __tablename__ = 'users'\n\n    id = Column(Integer, primary_key=True)\n    nombre = Column(String(50))\n    apellido = Column(String(50))\n    username = Column(String(50))\n    email = Column(String(150))\n    password = Column(String(32))\n\n    def __init__(self, nombre, apellido, username, email, password):\n                \n        self.nombre = nombre\n        self.apellido = apellido\n        self.username = username\n        self.email = email\n        self.password = password\n    def toDict(self):\n        dic = {}\n        dic[\"id\"] = self.id\n        dic[\"nombre\"] = self.nombre\n        dic[\"apellido\"] = self.apellido\n        dic[\"username\"] = self.username\n        dic[\"email\"] = self.email\n        dic[\"password\"] = self.password\n        return dic\n    #  def __repr__(self):\n\t#\treturn \"ID: %s\\nNombre: %s \\nApellido: %s\\n Username: %s\\nPassword: %s\\nEmail: %s\\n\\n\" % (self.id,self.nombre,self.apellido,self.username,self.password,self.email)\n\n    def update(self, diccionario):\n        \"\"\"\n        Actualiza el usuario a partir de un diccionario de registros de la forma\n        atributo:valor\n        \"\"\"\n        for propiedad, valor in diccionario.iteritems():\n            if propiedad == \"nombre\":\n                self.nombre = valor\n            elif propiedad == \"apellido\":\n                self.apellido = valor\n            elif propiedad == \"username\":\n                self.username = valor\n            elif propiedad == \"email\":\n                self.email = valor\n            elif propiedad == \"password\":\n                self.password = valor\n        return \"exito\"\n\nclass Role(Base):\n    __tablename__ = 'roles'\n\n    id = Column(Integer, primary_key=True)\n    nombre = Column(String(50))\n    descripcion = Column(String)\n\n    def __init__(self, nombre, descripcion):\n        self.nombre = nombre\n        self.descripcion = descripcion\n\n    def toDict(self):\n        dic = {}\n        dic[\"id\"] = self.id\n        dic[\"nombre\"] = self.nombre\n        dic[\"descripcion\"] = self.descripcion\n        return dic\n        \nclass Permission(Base):\n    __tablename__ = 'Permissions'\n\n    id = Column(Integer, primary_key=True)\n    nombre = Column(String(50))\n    descripcion = Column(String)\n\n    def __init__(self, nombre, descripcion):\n        self.nombre = nombre\n        self.descripcion = descripcion\n\n    def toDict(self):\n        dic = {}\n        dic[\"id\"] = self.id\n        dic[\"nombre\"] = self.nombre\n        dic[\"descripcion\"] = self.descripcion\n        return dic\n        \nclass RolesPermissions(Base):\n    __tablename__ = \"roles_permissions\"\n    id_role = Column(Integer, primary_key=True)\n    id_permission = Column(Integer)\n    \n    def __init__(self, id_role, id_permission):\n        self.id_role = id_role\n        self.id_permission = id_permission\n        \nclass UsersRoles(Base):\n    __tablename__ = \"users_roles\"\n    id_user = Column(Integer, primary_key=True)\n    id_role = Column(Integer)\n    \n    def __init__(self, id_user, id_role):\n        self.id_user = id_user\n        self.id_role = id_role"],[0,"\n   "]],"start1":267,"start2":267,"length1":3144,"length2":8}]],"length":4359,"saved":false}
{"ts":1359327422802,"patch":[[{"diffs":[[0,"ine\n"],[-1,"from sqlalchemy.ext.declarative import declarative_base"],[0,"\nfro"]],"start1":158,"start2":158,"length1":63,"length2":8}]],"length":4304,"saved":false}
{"ts":1359327468610,"patch":[[{"diffs":[[0,"-*-\n"],[-1,"import os\n"],[0,"from"]],"start1":20,"start2":20,"length1":18,"length2":8}]],"length":4294,"saved":false}
{"ts":1359327482087,"patch":[[{"diffs":[[0,"-*-\n"],[-1,"from sqlalchemy import Column\nfrom sqlalchemy import Integer\nfrom sqlalchemy import String"],[0,"\nfro"]],"start1":20,"start2":20,"length1":98,"length2":8}]],"length":4204,"saved":false}
{"ts":1359327532524,"patch":[[{"diffs":[[0,"_engine\n"],[-1,"\n"],[0,"from sql"]],"start1":54,"start2":54,"length1":17,"length2":16}]],"length":4203,"saved":false}
{"ts":1359327539169,"patch":[[{"diffs":[[0,"n\n\n\n"],[-1,"       \n\n\n"],[0,"clas"]],"start1":112,"start2":112,"length1":18,"length2":8}]],"length":4193,"saved":false}
{"ts":1359327604286,"patch":[[{"diffs":[[0,"rt json\n"],[1,"from "],[0,"\n\nclass "]],"start1":106,"start2":106,"length1":16,"length2":21}]],"length":4198,"saved":false}
{"ts":1359327609545,"patch":[[{"diffs":[[0,"on\nfrom "],[1,"dtos impor"],[0,"\n\nclass "]],"start1":111,"start2":111,"length1":16,"length2":26}]],"length":4208,"saved":false}
{"ts":1359327610907,"patch":[[{"diffs":[[0,"os impor"],[1,"t "],[0,"\n\nclass "]],"start1":121,"start2":121,"length1":16,"length2":18}]],"length":4210,"saved":false}
{"ts":1359327648612,"patch":[[{"diffs":[[0," import "],[1,"Usuario"],[0,"\n\nclass "]],"start1":123,"start2":123,"length1":16,"length2":23}]],"length":4217,"saved":false}
{"ts":1359327649436,"patch":[[{"diffs":[[0," Usuario"],[1,",R"],[0,"\n\nclass "]],"start1":130,"start2":130,"length1":16,"length2":18}]],"length":4219,"saved":false}
{"ts":1359327651182,"patch":[[{"diffs":[[0,"suario,R"],[1,"ole,P"],[0,"\n\nclass "]],"start1":132,"start2":132,"length1":16,"length2":21}]],"length":4224,"saved":false}
{"ts":1359327655248,"patch":[[{"diffs":[[0,"o,Role,P"],[1,"ermission,"],[0,"\n\nclass "]],"start1":137,"start2":137,"length1":16,"length2":26}]],"length":4234,"saved":false}
{"ts":1359327665353,"patch":[[{"diffs":[[0,"ission,\n"],[-1,"\n"],[0,"class Da"]],"start1":148,"start2":148,"length1":17,"length2":16}]],"length":4233,"saved":false}
{"ts":1359327670036,"patch":[[{"diffs":[[0,"mission,"],[1,"RolesPermissions,"],[0,"\nclass D"]],"start1":147,"start2":147,"length1":16,"length2":33}]],"length":4250,"saved":false}
{"ts":1359327672013,"patch":[[{"diffs":[[0,"issions,"],[1," U"],[0,"\nclass D"]],"start1":164,"start2":164,"length1":16,"length2":18}]],"length":4252,"saved":false}
{"ts":1359327675240,"patch":[[{"diffs":[[0,"sions, U"],[1,"sersRoles\n"],[0,"\nclass D"]],"start1":166,"start2":166,"length1":16,"length2":26}]],"length":4262,"saved":false}
{"ts":1359327976258,"patch":[[{"diffs":[[0,"    "],[-1,"def obtenerDatos(self, tabla):\n        \"\"\"\n        Devuelve los datos de una tabla por medio de una lista.\n\n        Recibe como parámetro el nombre de la tabla a la cual acceder.\n\n        Retorna una lista de diccionarios cada uno lleno con conjuntos clave-valor\n        que hacen referencia a los atributos de los objetos dto propios de la\n        consulta\n        \"\"\"\n        lista = []\n        consulta = None\n        if tabla.lower() == \"users\":\n            consulta = self.ses.query(Usuario)\n        elif tabla.lower() == \"permissions\":\n            consulta = self.ses.query(Permission)\n        elif tabla.lower() == \"roles\":\n            consulta = self.ses.query(Role)\n        for instancia in consulta:\n            diccionario = instancia.toDict()\n            lista.append(diccionario)\n        return lista"],[0,"\n\n  "]],"start1":1813,"start2":1813,"length1":821,"length2":8}]],"length":3449,"saved":false}
{"ts":1359327979595,"patch":[[{"diffs":[[0,"ession()"],[1,"\n        \n        "],[0,"\n\n    de"]],"start1":673,"start2":673,"length1":16,"length2":34}]],"length":3467,"saved":false}
{"ts":1359327983010,"patch":[[{"diffs":[[0,"   \n    "],[-1,"    "],[1,"def obtenerDatos(self, tabla):\n        \"\"\"\n        Devuelve los datos de una tabla por medio de una lista.\n\n        Recibe como parámetro el nombre de la tabla a la cual acceder.\n\n        Retorna una lista de diccionarios cada uno lleno con conjuntos clave-valor\n        que hacen referencia a los atributos de los objetos dto propios de la\n        consulta\n        \"\"\"\n        lista = []\n        consulta = None\n        if tabla.lower() == \"users\":\n            consulta = self.ses.query(Usuario)\n        elif tabla.lower() == \"permissions\":\n            consulta = self.ses.query(Permission)\n        elif tabla.lower() == \"roles\":\n            consulta = self.ses.query(Role)\n        for instancia in consulta:\n            diccionario = instancia.toDict()\n            lista.append(diccionario)\n        return lista"],[0,"\n\n    de"]],"start1":687,"start2":687,"length1":20,"length2":829}]],"length":4276,"saved":false}
{"contributors":[],"silentsave":true,"ts":1359328766526,"patch":[[{"diffs":[[0,"()\n        \n"],[1,"    \n    \n"],[0,"    def obte"]],"start1":679,"start2":679,"length1":24,"length2":34}]],"length":4286,"saved":false}
{"ts":1359328771748,"patch":[[{"diffs":[[0,"       \n    "],[1,"obtenerDatos "],[0,"\n    \n    de"]],"start1":683,"start2":683,"length1":24,"length2":37}]],"length":4299,"saved":false}
{"ts":1359328837285,"patch":[[{"diffs":[[0,"nerDatos"],[-1," "],[1,"Diccionario(self,tabla):\n        \"\"\"\n        Devuelve los datos de una tabla por medio de un diccionario.\n\n        Recibe como parámetro el nombre de la tabla a la cual acceder.\n\n        Retorna una lista de diccionarios cada uno lleno con conjuntos clave-valor\n        que hacen referencia a los atributos de los objetos dto propios de la\n        consulta\n        \"\"\""],[0,"\n    \n  "]],"start1":699,"start2":699,"length1":17,"length2":384}]],"length":4666,"saved":false}
{"ts":1359328880949,"patch":[[{"diffs":[[0,"    "],[-1,"obtenerDatosDiccionario(self,tabla):\n        \"\"\"\n        Devuelve los datos de una tabla por medio de un diccionario.\n\n        Recibe como parámetro el nombre de la tabla a la cual acceder.\n\n        Retorna una lista de diccionarios cada uno lleno con conjuntos clave-valor\n        que hacen referencia a los atributos de los objetos dto propios de la\n        consulta\n        \"\"\""],[0,"\n   "]],"start1":691,"start2":691,"length1":388,"length2":8}]],"length":4286,"saved":false}
{"ts":1359329147474,"patch":[[{"diffs":[[0,"       \n    "],[1,"getDato"],[0,"\n    \n    de"]],"start1":683,"start2":683,"length1":24,"length2":31}]],"length":4293,"saved":false}
{"ts":1359329148260,"patch":[[{"diffs":[[0,"  getDat"],[-1,"o"],[0,"\n    \n  "]],"start1":693,"start2":693,"length1":17,"length2":16}]],"length":4292,"saved":false}
{"ts":1359329149144,"patch":[[{"diffs":[[0,"  getDat"],[1,"a"],[0,"\n    \n  "]],"start1":693,"start2":693,"length1":16,"length2":17}]],"length":4293,"saved":false}
{"ts":1359329151257,"patch":[[{"diffs":[[0," getData"],[1,"("],[0,"\n    \n  "]],"start1":694,"start2":694,"length1":16,"length2":17}]],"length":4294,"saved":false}
{"ts":1359329154688,"patch":[[{"diffs":[[0,"\n    get"],[-1,"Dat"],[1,"Tabl"],[0,"a(\n    \n"]],"start1":690,"start2":690,"length1":19,"length2":20}]],"length":4295,"saved":false}
{"ts":1359329157492,"patch":[[{"diffs":[[0,"    "],[-1,"getTabla("],[1,"o"],[0,"\n   "]],"start1":691,"start2":691,"length1":17,"length2":9}]],"length":4287,"saved":false}
{"ts":1359329162815,"patch":[[{"diffs":[[0,"  \n    o"],[1,"btenerTabla(s)"],[0,"\n    \n  "]],"start1":688,"start2":688,"length1":16,"length2":30}]],"length":4301,"saved":false}
{"ts":1359329163681,"patch":[[{"diffs":[[0,"rTabla(s"],[1,"elf,"],[0,")\n    \n "]],"start1":701,"start2":701,"length1":16,"length2":20}]],"length":4305,"saved":false}
{"ts":1359329164970,"patch":[[{"diffs":[[0,"la(self,"],[1," tabl"],[0,")\n    \n "]],"start1":705,"start2":705,"length1":16,"length2":21}]],"length":4310,"saved":false}
{"ts":1359329168485,"patch":[[{"diffs":[[0,"lf, tabl"],[-1,")"],[1,"a):\n        "],[0,"\n    \n  "]],"start1":710,"start2":710,"length1":17,"length2":28}]],"length":4321,"saved":false}
{"ts":1359329175683,"patch":[[{"diffs":[[0,"a):\n        "],[1," \"\"\"\n        Devuelve los datos de una tabla por medio de una lista.\n\n        Recibe como parámetro el nombre de la tabla a la cual acceder.\n\n        Retorna una lista de diccionarios cada uno lleno con conjuntos clave-valor\n        que hacen referencia a los atributos de los objetos dto propios de la\n        consulta\n        \"\"\""],[0,"\n    \n    de"]],"start1":718,"start2":718,"length1":24,"length2":355}]],"length":4652,"saved":false}
{"ts":1359329193664,"patch":[[{"diffs":[[0," medio de un"],[-1,"a lista."],[1," diccionario"],[0,"\n\n        Re"]],"start1":778,"start2":778,"length1":32,"length2":36}]],"length":4656,"saved":false}
{"ts":1359329220255,"patch":[[{"diffs":[[0,"        \"\"\"\n"],[1,"        p\n"],[0,"    \n    def"]],"start1":1054,"start2":1054,"length1":24,"length2":34}]],"length":4666,"saved":false}
{"ts":1359329221970,"patch":[[{"diffs":[[0,"       p"],[1,"ass"],[0,"\n    \n  "]],"start1":1067,"start2":1067,"length1":16,"length2":19}]],"length":4669,"saved":false}
{"ts":1359329239192,"patch":[[{"diffs":[[0,"    "],[-1,"obtenerTabla(self, tabla):\n         \"\"\"\n        Devuelve los datos de una tabla por medio de un diccionario\n\n        Recibe como parámetro el nombre de la tabla a la cual acceder.\n\n        Retorna una lista de diccionarios cada uno lleno con conjuntos clave-valor\n        que hacen referencia a los atributos de los objetos dto propios de la\n        consulta\n        \"\"\"\n        pass"],[0,"\n   "]],"start1":691,"start2":691,"length1":391,"length2":8}]],"length":4286,"saved":false}
{"ts":1359329347407,"patch":[[{"diffs":[[0,"son.dump"],[1,"s"],[0,"(dbmm.ob"]],"start1":4245,"start2":4245,"length1":16,"length2":17}]],"length":4287,"saved":false}
{"ts":1359329394085,"patch":[[{"diffs":[[0,"sers\"))\n    "],[1,"\n    "]],"start1":4275,"start2":4275,"length1":12,"length2":17}]],"length":4292,"saved":false}
{"ts":1359329397666,"patch":[[{"diffs":[[0,"sers\"))\n    "],[1,"print j"],[0,"\n    "]],"start1":4275,"start2":4275,"length1":17,"length2":24}]],"length":4299,"saved":false}
{"ts":1359329399820,"patch":[[{"diffs":[[0,"  print "],[-1,"j"],[0,"\n    "]],"start1":4285,"start2":4285,"length1":14,"length2":13}]],"length":4298,"saved":false}
{"ts":1359329404831,"patch":[[{"diffs":[[0,"  print "],[1,"hola="],[0,"json.dum"]],"start1":4236,"start2":4236,"length1":16,"length2":21}]],"length":4303,"saved":false}
{"ts":1359329410624,"patch":[[{"diffs":[[0,"  print "],[1,"type(hola)"],[0,"\n    "]],"start1":4290,"start2":4290,"length1":13,"length2":23}]],"length":4313,"saved":false}
{"ts":1359329421969,"patch":[[{"diffs":[[0,"r()\n    "],[-1,"print "],[0,"hola=jso"]],"start1":4230,"start2":4230,"length1":22,"length2":16}]],"length":4307,"saved":false}
{"ts":1359329424326,"patch":[[{"diffs":[[0,"sers\"))\n"],[1,"    print ho\n"],[0,"    prin"]],"start1":4274,"start2":4274,"length1":16,"length2":29}]],"length":4320,"saved":false}
{"ts":1359329425809,"patch":[[{"diffs":[[0,"print ho"],[1,"la"],[0,"\n    pri"]],"start1":4286,"start2":4286,"length1":16,"length2":18}]],"length":4322,"saved":false}
{"ts":1359329459530,"patch":[[{"diffs":[[0,"e(hola)\n    "],[1,"print \n    "]],"start1":4310,"start2":4310,"length1":12,"length2":23}]],"length":4333,"saved":false}
{"ts":1359329460437,"patch":[[{"diffs":[[0,"  print "],[1,"d"],[0,"\n    "]],"start1":4320,"start2":4320,"length1":13,"length2":14}]],"length":4334,"saved":false}
{"ts":1359329463268,"patch":[[{"diffs":[[0," print d"],[1,"bmm.obtenerDatos"],[0,"\n    "]],"start1":4321,"start2":4321,"length1":13,"length2":29}]],"length":4350,"saved":false}
{"ts":1359329466450,"patch":[[{"diffs":[[0,"nerDatos"],[1,"(\"users"],[0,"\n    "]],"start1":4337,"start2":4337,"length1":13,"length2":20}]],"length":4357,"saved":false}
{"ts":1359329467626,"patch":[[{"diffs":[[0,"s(\"users"],[1,"\")"],[0,"\n    "]],"start1":4344,"start2":4344,"length1":13,"length2":15}]],"length":4359,"saved":false}
{"contributors":[],"silentsave":true,"ts":1359375016286,"patch":[[{"diffs":[[0,"   \n"],[-1,"    Recibe como parámetros el esquema y el motor.\n"],[0,"    "]],"start1":296,"start2":296,"length1":58,"length2":8},{"diffs":[[0,"t__(self"],[1,", "],[0,"):\n     "]],"start1":360,"start2":360,"length1":16,"length2":18}]],"length":4311,"saved":false}
{"ts":1359375018462,"patch":[[{"diffs":[[0,"_(self, "],[1,"clave"],[0,"):\n     "]],"start1":362,"start2":362,"length1":16,"length2":21}]],"length":4316,"saved":false}
{"ts":1359375025434,"patch":[[{"diffs":[[0,"f, clave"],[1,"=None"],[0,"):\n     "]],"start1":367,"start2":367,"length1":16,"length2":21}]],"length":4321,"saved":false}
{"ts":1359375091252,"patch":[[{"diffs":[[0,"ave="],[-1,"None):\n        clave = "],[0,"\"Pru"]],"start1":372,"start2":372,"length1":31,"length2":8},{"diffs":[[0,"as2013!\""],[1,"):\n        "],[0,"\n       "]],"start1":382,"start2":382,"length1":16,"length2":27}]],"length":4309,"saved":false}
{"ts":1359375728127,"patch":[[{"diffs":[[0,"\n       "],[1,"\n       \n       \n      "],[0,"\n\nif __n"]],"start1":4118,"start2":4118,"length1":16,"length2":39}]],"length":4332,"saved":false}
{"ts":1359375728746,"patch":[[{"diffs":[[0,"  \n     "],[-1," "],[0,"\n\nif __n"]],"start1":4140,"start2":4140,"length1":17,"length2":16}]],"length":4331,"saved":false}
{"ts":1359375729431,"patch":[[{"diffs":[[0,"   \n    "],[-1," "],[0,"\n\nif __n"]],"start1":4139,"start2":4139,"length1":17,"length2":16}]],"length":4330,"saved":false}
{"ts":1359375730156,"patch":[[{"diffs":[[0,"   \n    "],[1,"def obtenerDatos(self, tabla):\n        \"\"\"\n        Devuelve los datos de una tabla por medio de una lista.\n\n        Recibe como parámetro el nombre de la tabla a la cual acceder.\n\n        Retorna una lista de diccionarios cada uno lleno con conjuntos clave-valor\n        que hacen referencia a los atributos de los objetos dto propios de la\n        consulta\n        \"\"\"\n        lista = []\n        consulta = None\n        if tabla.lower() == \"users\":\n            consulta = self.ses.query(Usuario)\n        elif tabla.lower() == \"permissions\":\n            consulta = self.ses.query(Permission)\n        elif tabla.lower() == \"roles\":\n            consulta = self.ses.query(Role)\n        for instancia in consulta:\n            diccionario = instancia.toDict()\n            lista.append(diccionario)\n        return lista"],[0,"\n\nif __n"]],"start1":4139,"start2":4139,"length1":16,"length2":829}]],"length":5143,"saved":false}
{"ts":1359375737655,"patch":[[{"diffs":[[0,"def obtenerDatos"],[1,"Json"],[0,"(self, tabla):\n "]],"start1":4147,"start2":4147,"length1":32,"length2":36}]],"length":5147,"saved":false}
{"ts":1359375804193,"patch":[[{"diffs":[[0,"\"\"\"\n        "],[-1,"lista = []"],[1,"diccionario = {}"],[0,"\n        con"]],"start1":4517,"start2":4517,"length1":34,"length2":40},{"diffs":[[0,"ses.query(Role)\n"],[1,"            \n"],[0,"        for inst"]],"start1":4816,"start2":4816,"length1":32,"length2":45}]],"length":5166,"saved":false}
{"ts":1359375926344,"patch":[[{"diffs":[[0,"ia in consulta:\n"],[1,"            insta\n"],[0,"            dicc"]],"start1":4864,"start2":4864,"length1":32,"length2":50}]],"length":5184,"saved":false}
{"ts":1359375929441,"patch":[[{"diffs":[[0,"   insta"],[1,"ncia."],[0,"\n       "]],"start1":4889,"start2":4889,"length1":16,"length2":21}]],"length":5189,"saved":false}
{"ts":1359375937735,"patch":[[{"diffs":[[0,"stancia."],[1,"t"],[0,"\n       "]],"start1":4894,"start2":4894,"length1":16,"length2":17}]],"length":5190,"saved":false}
{"ts":1359375938866,"patch":[[{"diffs":[[0,"tancia.t"],[1,"o"],[0,"\n       "]],"start1":4895,"start2":4895,"length1":16,"length2":17}]],"length":5191,"saved":false}
{"ts":1359375941737,"patch":[[{"diffs":[[0,"        "],[-1,"instancia.to"],[0,"\n       "]],"start1":4884,"start2":4884,"length1":28,"length2":16}]],"length":5179,"saved":false}
{"ts":1359375943052,"patch":[[{"diffs":[[0,"nsulta:\n"],[-1,"            \n"],[0,"        "]],"start1":4872,"start2":4872,"length1":29,"length2":16}]],"length":5166,"saved":false}
{"ts":1359376054621,"patch":[[{"diffs":[[0,"ia in consulta:\n"],[1,"\n"],[0,"            dicc"]],"start1":4864,"start2":4864,"length1":32,"length2":33}]],"length":5167,"saved":false}
{"ts":1359376056429,"patch":[[{"diffs":[[0,"nsulta:\n"],[1,"            instancia.t"],[0,"\n       "]],"start1":4872,"start2":4872,"length1":16,"length2":39}]],"length":5190,"saved":false}
{"ts":1359376061129,"patch":[[{"diffs":[[0,"o = "],[-1,"{}"],[0,"\n   "]],"start1":4539,"start2":4539,"length1":10,"length2":8},{"diffs":[[0,"le)\n"],[-1,"            \n"],[0,"    "]],"start1":4826,"start2":4826,"length1":21,"length2":8},{"diffs":[[0,"ta:\n"],[-1,"            instancia.t\n"],[0,"    "]],"start1":4861,"start2":4861,"length1":32,"length2":8}]],"length":5151,"saved":false}
{"ts":1359376062072,"patch":[[{"diffs":[[0,"nario = "],[1,"[]"],[0,"\n       "]],"start1":4535,"start2":4535,"length1":16,"length2":18}]],"length":5153,"saved":false}
{"ts":1359376066153,"patch":[[{"diffs":[[0,"        "],[-1,"diccionario"],[1,"lista"],[0," = []\n  "]],"start1":4521,"start2":4521,"length1":27,"length2":21}]],"length":5147,"saved":false}
{"ts":1359376084353,"patch":[[{"diffs":[[0,"er()\n   "],[1,"#"],[0," hola=js"]],"start1":5017,"start2":5017,"length1":16,"length2":17}]],"length":5148,"saved":false}
{"ts":1359376088902,"patch":[[{"diffs":[[0,"    "],[-1,"print hola\n    print type(hola)"],[0,"\n   "]],"start1":5071,"start2":5071,"length1":39,"length2":8}]],"length":5117,"saved":false}
{"ts":1359376106295,"patch":[[{"diffs":[[0,"\"users\")"],[1,"[0"],[0,"\n    "]],"start1":5104,"start2":5104,"length1":13,"length2":15}]],"length":5119,"saved":false}
{"ts":1359376108661,"patch":[[{"diffs":[[0,"sers\")[0"],[1,"]"],[0,"\n    "]],"start1":5106,"start2":5106,"length1":13,"length2":14}]],"length":5120,"saved":false}
{"ts":1359376123503,"patch":[[{"diffs":[[0,"))\n    \n    "],[1,"diccio"],[0,"print dbmm.o"]],"start1":5068,"start2":5068,"length1":24,"length2":30}]],"length":5126,"saved":false}
{"ts":1359376124839,"patch":[[{"diffs":[[0,"  diccio"],[1,"="],[0,"print db"]],"start1":5078,"start2":5078,"length1":16,"length2":17}]],"length":5127,"saved":false}
{"ts":1359376126911,"patch":[[{"diffs":[[0,"rs\")[0]\n    "],[1,"\n    "]],"start1":5115,"start2":5115,"length1":12,"length2":17}]],"length":5132,"saved":false}
{"ts":1359376191972,"patch":[[{"diffs":[[0,"s\")[0]\n    \n    "],[1,"d\n    "]],"start1":5116,"start2":5116,"length1":16,"length2":22}]],"length":5138,"saved":false}
{"ts":1359376192936,"patch":[[{"diffs":[[0,"  \n    d"],[1,"i"],[0,"\n    "]],"start1":5125,"start2":5125,"length1":13,"length2":14}]],"length":5139,"saved":false}
{"ts":1359376194460,"patch":[[{"diffs":[[0," \n    di"],[1,"ccio"],[0,"\n    "]],"start1":5126,"start2":5126,"length1":13,"length2":17}]],"length":5143,"saved":false}
{"ts":1359376198901,"patch":[[{"diffs":[[0,"0]\n    \n    "],[1,"del "],[0,"diccio\n    "]],"start1":5120,"start2":5120,"length1":23,"length2":27}]],"length":5147,"saved":false}
{"ts":1359376202672,"patch":[[{"diffs":[[0,"l diccio"],[1,"[\""],[0,"\n    "]],"start1":5134,"start2":5134,"length1":13,"length2":15}]],"length":5149,"saved":false}
{"ts":1359376206058,"patch":[[{"diffs":[[0,"diccio[\""],[1,"username"],[0,"\n    "]],"start1":5136,"start2":5136,"length1":13,"length2":21}]],"length":5157,"saved":false}
{"ts":1359376209089,"patch":[[{"diffs":[[0,"cio["],[-1,"\"username"],[1,"id"],[0,"\n   "]],"start1":5139,"start2":5139,"length1":17,"length2":10}]],"length":5150,"saved":false}
{"ts":1359376210450,"patch":[[{"diffs":[[0," diccio["],[-1,"id"],[1,"\""],[0,"\n    "]],"start1":5135,"start2":5135,"length1":15,"length2":14}]],"length":5149,"saved":false}
{"ts":1359376212273,"patch":[[{"diffs":[[0,"diccio[\""],[1,"id\""],[0,"\n    "]],"start1":5136,"start2":5136,"length1":13,"length2":16}]],"length":5152,"saved":false}
{"ts":1359376214581,"patch":[[{"diffs":[[0,"cio[\"id\""],[1,"]"],[0,"\n    "]],"start1":5139,"start2":5139,"length1":13,"length2":14}]],"length":5153,"saved":false}
{"ts":1359376216891,"patch":[[{"diffs":[[0,"o[\"id\"]\n    "],[1,"print \n    "]],"start1":5141,"start2":5141,"length1":12,"length2":23}]],"length":5164,"saved":false}
{"ts":1359376218396,"patch":[[{"diffs":[[0,"  print "],[1,"d"],[0,"\n    "]],"start1":5151,"start2":5151,"length1":13,"length2":14}]],"length":5165,"saved":false}
{"ts":1359376220152,"patch":[[{"diffs":[[0," print d"],[1,"iccio"],[0,"\n    "]],"start1":5152,"start2":5152,"length1":13,"length2":18}]],"length":5170,"saved":false}
{"ts":1359376222938,"patch":[[{"diffs":[[0," diccio="],[-1,"print"],[0," dbmm.ob"]],"start1":5079,"start2":5079,"length1":21,"length2":16}]],"length":5165,"saved":false}
{"ts":1359376269754,"patch":[[{"diffs":[[0,"tancia.toDict()\n"],[1,"            \n"],[0,"            list"]],"start1":4890,"start2":4890,"length1":32,"length2":45}]],"length":5178,"saved":false}
{"ts":1359376280877,"patch":[[{"diffs":[[0,"    \"\"\"\n        "],[-1,"list"],[1,"diccion"],[0,"a = []\n        c"]],"start1":4513,"start2":4513,"length1":36,"length2":39}]],"length":5181,"saved":false}
{"ts":1359376282243,"patch":[[{"diffs":[[0,"dicciona"],[1,"rio"],[0," = []\n  "]],"start1":4529,"start2":4529,"length1":16,"length2":19}]],"length":5184,"saved":false}
{"ts":1359376287064,"patch":[[{"diffs":[[0,"ionario "],[-1,"= []"],[0,"\n       "]],"start1":4533,"start2":4533,"length1":20,"length2":16}]],"length":5180,"saved":false}
{"ts":1359376289165,"patch":[[{"diffs":[[0,"ionario "],[1,"= "],[0,"\n       "]],"start1":4533,"start2":4533,"length1":16,"length2":18}]],"length":5182,"saved":false}
{"ts":1359376291430,"patch":[[{"diffs":[[0,"nario = "],[1,"{}"],[0,"\n       "]],"start1":4535,"start2":4535,"length1":16,"length2":18}]],"length":5184,"saved":false}
{"ts":1359376301382,"patch":[[{"diffs":[[0,"            dicc"],[-1,"ionario"],[1,"Tem"],[0," = instancia.toD"]],"start1":4867,"start2":4867,"length1":39,"length2":35}]],"length":5180,"saved":false}
{"ts":1359376302570,"patch":[[{"diffs":[[0," diccTem"],[1,"p"],[0," = insta"]],"start1":4878,"start2":4878,"length1":16,"length2":17}]],"length":5181,"saved":false}
{"ts":1359376308238,"patch":[[{"diffs":[[0,"t()\n            "],[1,"di"],[0,"\n            lis"]],"start1":4905,"start2":4905,"length1":32,"length2":34}]],"length":5183,"saved":false}
{"ts":1359376309172,"patch":[[{"diffs":[[0,"      di"],[1,"c"],[0,"\n       "]],"start1":4915,"start2":4915,"length1":16,"length2":17}]],"length":5184,"saved":false}
{"ts":1359376309829,"patch":[[{"diffs":[[0,"     dic"],[1,"c"],[0,"\n       "]],"start1":4916,"start2":4916,"length1":16,"length2":17}]],"length":5185,"saved":false}
{"ts":1359376313137,"patch":[[{"diffs":[[0,"    dicc"],[1,"ionario"],[0,"\n       "]],"start1":4917,"start2":4917,"length1":16,"length2":23}]],"length":5192,"saved":false}
{"ts":1359376315638,"patch":[[{"diffs":[[0,"cionario"],[1,"["],[0,"\n       "]],"start1":4924,"start2":4924,"length1":16,"length2":17}]],"length":5193,"saved":false}
{"ts":1359376327651,"patch":[[{"diffs":[[0,"ionario["],[1,"di"],[0,"\n       "]],"start1":4925,"start2":4925,"length1":16,"length2":18}]],"length":5195,"saved":false}
{"ts":1359376331581,"patch":[[{"diffs":[[0,"     dic"],[-1,"c"],[0,"Temp = i"]],"start1":4874,"start2":4874,"length1":17,"length2":16}]],"length":5194,"saved":false}
{"ts":1359376335100,"patch":[[{"diffs":[[0,"nario[di"],[1,"cT"],[0,"\n       "]],"start1":4926,"start2":4926,"length1":16,"length2":18}]],"length":5196,"saved":false}
{"ts":1359376336255,"patch":[[{"diffs":[[0,"rio[dicT"],[1,"emp"],[0,"\n       "]],"start1":4928,"start2":4928,"length1":16,"length2":19}]],"length":5199,"saved":false}
{"ts":1359376341918,"patch":[[{"diffs":[[0,"ionario["],[-1,"dicTemp"],[0,"\n       "]],"start1":4924,"start2":4924,"length1":23,"length2":16}]],"length":5192,"saved":false}
{"ts":1359376343468,"patch":[[{"diffs":[[0,"ionario["],[1,"\""],[0,"\n       "]],"start1":4924,"start2":4924,"length1":16,"length2":17}]],"length":5193,"saved":false}
{"ts":1359376345174,"patch":[[{"diffs":[[0,"onario[\""],[1,"id\""],[0,"\n       "]],"start1":4925,"start2":4925,"length1":16,"length2":19}]],"length":5196,"saved":false}
{"ts":1359376348327,"patch":[[{"diffs":[[0,"rio[\"id\""],[1,"]"],[0,"\n       "]],"start1":4928,"start2":4928,"length1":16,"length2":17}]],"length":5197,"saved":false}
{"ts":1359376349589,"patch":[[{"diffs":[[0,"onario[\"id\"]"],[1,"="],[0,"\n           "]],"start1":4925,"start2":4925,"length1":24,"length2":25}]],"length":5198,"saved":false}
{"ts":1359376353387,"patch":[[{"diffs":[[0,"o[\"id\"]="],[1,"dic"],[0,"\n       "]],"start1":4930,"start2":4930,"length1":16,"length2":19}]],"length":5201,"saved":false}
{"ts":1359376355648,"patch":[[{"diffs":[[0,"id\"]=dic"],[1,"Temp"],[0,"\n       "]],"start1":4933,"start2":4933,"length1":16,"length2":20}]],"length":5205,"saved":false}
{"ts":1359376358400,"patch":[[{"diffs":[[0,"=dicTemp"],[1,"[\""],[0,"\n       "]],"start1":4937,"start2":4937,"length1":16,"length2":18}]],"length":5207,"saved":false}
{"ts":1359376359336,"patch":[[{"diffs":[[0,"icTemp[\""],[1,"id"],[0,"\n       "]],"start1":4939,"start2":4939,"length1":16,"length2":18}]],"length":5209,"saved":false}
{"ts":1359376360746,"patch":[[{"diffs":[[0,"Temp[\"id"],[1,"\""],[0,"\n       "]],"start1":4941,"start2":4941,"length1":16,"length2":17}]],"length":5210,"saved":false}
{"ts":1359376363874,"patch":[[{"diffs":[[0,"emp[\"id\""],[1,"]"],[0,"\n       "]],"start1":4942,"start2":4942,"length1":16,"length2":17}]],"length":5211,"saved":false}
{"ts":1359376377251,"patch":[[{"diffs":[[0,"[\"id"],[-1,"\"]=dicTemp[\"id\"]"],[0,"\n   "]],"start1":4931,"start2":4931,"length1":24,"length2":8}]],"length":5195,"saved":false}
{"ts":1359376378462,"patch":[[{"diffs":[[0,"ionario["],[-1,"\"id"],[0,"\n       "]],"start1":4924,"start2":4924,"length1":19,"length2":16}]],"length":5192,"saved":false}
{"ts":1359376379786,"patch":[[{"diffs":[[0,"ionario["],[1,"d"],[0,"\n       "]],"start1":4924,"start2":4924,"length1":16,"length2":17}]],"length":5193,"saved":false}
{"ts":1359376381163,"patch":[[{"diffs":[[0,"onario[d"],[1,"i"],[0,"\n       "]],"start1":4925,"start2":4925,"length1":16,"length2":17}]],"length":5194,"saved":false}
{"ts":1359376384207,"patch":[[{"diffs":[[0,"nario[di"],[1,"cTemp["],[0,"\n       "]],"start1":4926,"start2":4926,"length1":16,"length2":22}]],"length":5200,"saved":false}
{"ts":1359376385318,"patch":[[{"diffs":[[0,"dicTemp["],[1,"i"],[0,"\n       "]],"start1":4932,"start2":4932,"length1":16,"length2":17}]],"length":5201,"saved":false}
{"ts":1359376386464,"patch":[[{"diffs":[[0,"icTemp[i"],[1,"d"],[0,"\n       "]],"start1":4933,"start2":4933,"length1":16,"length2":17}]],"length":5202,"saved":false}
{"ts":1359376388789,"patch":[[{"diffs":[[0,"Temp"],[-1,"[id"],[0,"\n   "]],"start1":4935,"start2":4935,"length1":11,"length2":8}]],"length":5199,"saved":false}
{"ts":1359376390979,"patch":[[{"diffs":[[0,"[dicTemp"],[1,"[\""],[0,"\n       "]],"start1":4931,"start2":4931,"length1":16,"length2":18}]],"length":5201,"saved":false}
{"ts":1359376392419,"patch":[[{"diffs":[[0,"icTemp[\""],[1,"id"],[0,"\n       "]],"start1":4933,"start2":4933,"length1":16,"length2":18}]],"length":5203,"saved":false}
{"ts":1359376393745,"patch":[[{"diffs":[[0,"Temp[\"id"],[1,"]"],[0,"\n       "]],"start1":4935,"start2":4935,"length1":16,"length2":17}]],"length":5204,"saved":false}
{"ts":1359376395844,"patch":[[{"diffs":[[0,"Temp[\"id"],[1,"\""],[0,"]\n      "]],"start1":4935,"start2":4935,"length1":16,"length2":17}]],"length":5205,"saved":false}
{"ts":1359376397268,"patch":[[{"diffs":[[0,"icTemp[\"id\"]"],[1,"="],[0,"\n           "]],"start1":4933,"start2":4933,"length1":24,"length2":25}]],"length":5206,"saved":false}
{"ts":1359376402798,"patch":[[{"diffs":[[0,"p[\"id\"]="],[1,"di"],[0,"\n       "]],"start1":4938,"start2":4938,"length1":16,"length2":18}]],"length":5208,"saved":false}
{"ts":1359376404043,"patch":[[{"diffs":[[0,"\"id\"]=di"],[1,"c"],[0,"\n       "]],"start1":4940,"start2":4940,"length1":16,"length2":17}]],"length":5209,"saved":false}
{"ts":1359376419724,"patch":[[{"diffs":[[0,"tancia.toDict()\n"],[1,"            id=\n"],[0,"            dicc"]],"start1":4892,"start2":4892,"length1":32,"length2":48}]],"length":5225,"saved":false}
{"ts":1359376422771,"patch":[[{"diffs":[[0,"     id="],[1,"dicT"],[0,"\n       "]],"start1":4915,"start2":4915,"length1":16,"length2":20}]],"length":5229,"saved":false}
{"ts":1359376423481,"patch":[[{"diffs":[[0," id=dicT"],[1,"em"],[0,"\n       "]],"start1":4919,"start2":4919,"length1":16,"length2":18}]],"length":5231,"saved":false}
{"ts":1359376425135,"patch":[[{"diffs":[[0,"d=dicTem"],[1,"p"],[0,"\n       "]],"start1":4921,"start2":4921,"length1":16,"length2":17}]],"length":5232,"saved":false}
{"ts":1359376428009,"patch":[[{"diffs":[[0,"=dicTemp"],[1,"[\""],[0,"\n       "]],"start1":4922,"start2":4922,"length1":16,"length2":18}]],"length":5234,"saved":false}
{"ts":1359376429543,"patch":[[{"diffs":[[0,"icTemp[\""],[1,"id"],[0,"\n       "]],"start1":4924,"start2":4924,"length1":16,"length2":18}]],"length":5236,"saved":false}
{"ts":1359376432880,"patch":[[{"diffs":[[0,"Temp[\"id"],[1,"\""],[0,"\n       "]],"start1":4926,"start2":4926,"length1":16,"length2":17}]],"length":5237,"saved":false}
{"ts":1359376434455,"patch":[[{"diffs":[[0,"emp[\"id\""],[1,"]"],[0,"\n       "]],"start1":4927,"start2":4927,"length1":16,"length2":17}]],"length":5238,"saved":false}
{"ts":1359376441431,"patch":[[{"diffs":[[0,"ionario["],[-1,"dicTemp[\""],[0,"id"],[-1,"\""],[0,"]=dic\n  "]],"start1":4953,"start2":4953,"length1":28,"length2":18}]],"length":5228,"saved":false}
{"ts":1359376443333,"patch":[[{"diffs":[[0,"cTemp[\"id\"]\n"],[1,"            dic\n"],[0,"            "]],"start1":4925,"start2":4925,"length1":24,"length2":40}]],"length":5244,"saved":false}
{"ts":1359376445150,"patch":[[{"diffs":[[0,"     dic"],[1,"Temp"],[0,"\n       "]],"start1":4944,"start2":4944,"length1":16,"length2":20}]],"length":5248,"saved":false}
{"ts":1359376449352,"patch":[[{"diffs":[[0,"            "],[1,"del "],[0,"dicTemp\n    "]],"start1":4937,"start2":4937,"length1":24,"length2":28}]],"length":5252,"saved":false}
{"ts":1359376451443,"patch":[[{"diffs":[[0," dicTemp"],[1,"[id"],[0,"\n       "]],"start1":4952,"start2":4952,"length1":16,"length2":19}]],"length":5255,"saved":false}
{"ts":1359376452134,"patch":[[{"diffs":[[0,"dicTemp["],[-1,"id"],[0,"\n       "]],"start1":4953,"start2":4953,"length1":18,"length2":16}]],"length":5253,"saved":false}
{"ts":1359376453478,"patch":[[{"diffs":[[0,"dicTemp["],[1,"\"id"],[0,"\n       "]],"start1":4953,"start2":4953,"length1":16,"length2":19}]],"length":5256,"saved":false}
{"ts":1359376454935,"patch":[[{"diffs":[[0,"Temp[\"id"],[1,"\""],[0,"\n       "]],"start1":4956,"start2":4956,"length1":16,"length2":17}]],"length":5257,"saved":false}
{"ts":1359376455447,"patch":[[{"diffs":[[0,"emp[\"id\""],[1,"]"],[0,"\n       "]],"start1":4957,"start2":4957,"length1":16,"length2":17}]],"length":5258,"saved":false}
{"ts":1359376461137,"patch":[[{"diffs":[[0,"[id]=dic"],[1,"T"],[0,"\n       "]],"start1":4990,"start2":4990,"length1":16,"length2":17}]],"length":5259,"saved":false}
{"ts":1359376462641,"patch":[[{"diffs":[[0,"id]=dicT"],[1,"emp"],[0,"\n       "]],"start1":4991,"start2":4991,"length1":16,"length2":19}]],"length":5262,"saved":false}
{"ts":1359376468496,"patch":[[{"diffs":[[0,"emp\n"],[-1,"            lista.append(diccionario)\n"],[0,"    "]],"start1":4999,"start2":4999,"length1":46,"length2":8}]],"length":5224,"saved":false}
{"ts":1359376477921,"patch":[[{"diffs":[[0," return "],[-1,"lista"],[1,"diccionario"],[0,"\n\nif __n"]],"start1":5010,"start2":5010,"length1":21,"length2":27}]],"length":5230,"saved":false}
{"ts":1359376486083,"patch":[[{"diffs":[[0,"rs\")[0]\n    "],[-1,"\n"],[0,"    del dicc"]],"start1":5175,"start2":5175,"length1":25,"length2":24}]],"length":5229,"saved":false}
{"ts":1359376489020,"patch":[[{"diffs":[[0,"    "],[-1,"    del diccio[\"id\"]"],[0,"\n   "]],"start1":5183,"start2":5183,"length1":28,"length2":8}]],"length":5209,"saved":false}
{"ts":1359376513275,"patch":[[{"diffs":[[0,"rs\")"],[-1,"[0]"],[0,"\n   "]],"start1":5175,"start2":5175,"length1":11,"length2":8}]],"length":5206,"saved":false}
{"ts":1359376517490,"patch":[[{"diffs":[[0,"bmm.obtenerDatos"],[1,"Json"],[0,"(\"users\")\n    \n "]],"start1":5154,"start2":5154,"length1":32,"length2":36}]],"length":5210,"saved":false}
{"ts":1359376560543,"patch":[[{"diffs":[[0,"sers\")\n    \n"],[1,"    ho\n"],[0,"    print di"]],"start1":5177,"start2":5177,"length1":24,"length2":31}]],"length":5217,"saved":false}
{"ts":1359376562271,"patch":[[{"diffs":[[0," \n    ho"],[1,"la=j"],[0,"\n    pri"]],"start1":5187,"start2":5187,"length1":16,"length2":20}]],"length":5221,"saved":false}
