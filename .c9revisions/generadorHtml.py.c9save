{"ts":1359241782334,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"# -*- coding: utf-8 -*-\nimport database\n\ndef llenarSelectBD(tabla):\n    \"\"\"Llena un select con los nombres de una tabla.\n\n    Recibe como parÃ¡metro un string con el nombre de la tabla que contiene los\n    nombres deseados.\n\n    Retorna un string con el cÃ³digo html listo para emplazar en el contenido de\n    un select\n    \"\"\"\n\n    bd = database.DatabaseManager(\"webd\", \"MySql\")\n    dicc={}\n    lista=bd.obtenerDatos(tabla)\n    for registro in lista:\n        dicc[registro[\"nombre\"]]=registro[\"id\"]\n    options=llenarSelect(dicc)\n\n    return options\n\n\ndef llenarSelect(diccionario):\n    \"\"\"Llena un select con los valores de un diccionario.\n\n    Recibe como parÃ¡metro un diccionario con el formato {\"nombre\":\"valor\"}, con\n    los que se llenarÃ¡ el select.\n\n    Retorna un string con el cÃ³digo html listo para emplazar en el contenido de\n    un select\n    \"\"\"\n\n    selectHtml = \"\"\n    for item in diccionario:\n        selectHtml += '<option value=\"%s\">%s</option>\\n' % (str(diccionario[item]), item)\n    return selectHtml\n\n\n\n\n\n\ndef llenarTablaBD(tabla,listaCampos,ud=0):\n    \"\"\"Llena una tabla html a partir de los registros en la base de datos.\n\n    Recibe como parÃ¡metro \"tabla\", que es el nombre de la tabla como string y\n    \"listaCampos\", una lista con el nombre de los campos a llenar\n\n    Retorna un string con una tabla html que contiene los registros de la tabla\n    indicada\n    \"\"\"\n    bdm = database.DatabaseManager(\"webd\", \"MySql\")\n    listaDiccionarios=bdm.obtenerDatos(tabla)\n\n    listaResultado=[listaCampos]\n    for diccionario in listaDiccionarios:\n        #se crean sublistas\n        subLista=[]\n        for valor in listaCampos:\n            subLista.append(diccionario[valor.lower()])\n        if ud:\n            id=diccionario[\"id\"]\n            botones=\"\"\"<a href='editar/%s'><img alt='Editar' title='Editar'\n            src='https://dl.dropbox.com/u/36392791/edit.png'></a>\n            <a href='eliminar/%s'><img alt='Eliminar' title='Eliminar'\n            src='https://dl.dropbox.com/u/36392791/delete.png'></a>\"\"\" % (id,id)\n            subLista.append(botones)\n#             subLista.append(\"<a href='eliminar/%s'><img alt='Eliminar' title='Eliminar' src='https://dl.dropbox.com/u/36392791/delete.png'></a>\" % diccionario[\"id\"] )\n#            subLista.append(\"hola\")\n        listaResultado.append(subLista)\n    if ud:\n        listaResultado[0].append(\"Accionn\")\n        #listaResultado[0].append(\"Eliminar\")\n\n    return llenarTabla(listaResultado)\n\n\n\n\ndef llenarTabla(listaTabla):\n    \"\"\"\n    A partir de una lista devuelve el cÃ³digo html necesario para una tabla.\n\n    Recibe como parÃ¡metro una lista de listas cuyo primer Ã­tem es una lista con\n    los nombres de las columnas de la tabla y los demÃ¡s itemas son listas con los\n    valores respectivos de cada renglÃ³n.\n\n    Retorna un string con el cÃ³digo html listo de una tabla llena.\n    \"\"\"\n#Llena el renglÃ³n de headers de la tabla\n    html=\"<table border=1>\\n\"\n    iterador=0\n    for renglon in listaTabla:\n        html+=\"    <tr>\\n\"\n        if iterador==0:\n            for nombre in renglon:\n                html+=\"        <th>%s</th>\\n\" % nombre\n        else:\n            for valor in renglon:\n                html+=\"        <td>%s</td>\\n\" % valor\n        html+=\"    </tr>\\n\"\n    html+=\"</table>\"\n    return html\n\n\nif __name__ == \"__main__\":\n  #  lista=[[\"ID\",\"Nombre\",\"Apellido\"],[\"1\",\"Juan\",\"Sanchez\"],[\"2\",\"Violeta\",\"Sanchez\"]]\n#    cadena= llenarTabla(lista)\n    lista=[{\"id\":\"1\",\"nombre\":\"Juan\",\"apellido\":\"Sanchez\"},\n           {\"id\":\"2\",\"nombre\":\"Pepe\",\"apellido\":\"Sanchez\"}]\n    listaNombres=[\"ID\",\"Nombre\",\"Apellido\"]\n\n    print llenarTablaBD(\"users\",listaNombres).decode(\"UTF-8\")\n    \n    "]],"start1":0,"start2":0,"length1":0,"length2":3690}]],"length":3690}
{"contributors":[],"silentsave":true,"ts":1359241792541,"patch":[[{"diffs":[[0,"\":\n "],[-1," #  lista=[[\"ID\",\"Nombre\",\"Apellido\"],[\"1\",\"Juan\",\"Sanchez\"],[\"2\",\"Violeta\",\"Sanchez\"]]\n#    cadena= llenarTabla(lista)\n    lista=[{\"id\":\"1\",\"nombre\":\"Juan\",\"apellido\":\"Sanchez\"},\n           {\"id\":\"2\",\"nombre\":\"Pepe\",\"apellido\":\"Sanchez\"}]\n    listaNombres=[\"ID\",\"Nombre\",\"Apellido\"]\n\n    print llenarTablaBD(\"users\",listaNombres).decode(\"UTF-8\")\n   "],[1,"if __name__ == \"__main__\":\n    print os.environ[\"PORT\"] \n    print os.environ[\"IP\"]"],[0," \n  "]],"start1":3330,"start2":3330,"length1":358,"length2":91}]],"length":3423,"saved":false}
{"ts":1359241796478,"patch":[[{"diffs":[[0,"l\n\n\n"],[-1,"if __name__ == \"__main__\":"],[0,"\n if"]],"start1":3302,"start2":3302,"length1":34,"length2":8}]],"length":3397,"saved":false}
{"ts":1359241798437,"patch":[[{"diffs":[[0,"n html\n\n"],[-1,"\n\n "],[0,"if __nam"]],"start1":3297,"start2":3297,"length1":19,"length2":16}]],"length":3394,"saved":false}
{"ts":1359241817826,"patch":[[{"diffs":[[0,"atabase\n"],[1,"import os"],[0,"\ndef lle"]],"start1":32,"start2":32,"length1":16,"length2":25}]],"length":3403,"saved":false}
{"ts":1359242639091,"patch":[[{"diffs":[[0," Recibe como par"],[-1,"Ã¡"],[1,"á"],[0,"metro un diccion"]],"start1":655,"start2":655,"length1":34,"length2":33}]],"length":3402,"saved":false}
{"ts":1359242641915,"patch":[[{"diffs":[[0," string con el c"],[-1,"Ã³"],[1,"ó"],[0,"digo html listo "]],"start1":782,"start2":782,"length1":34,"length2":33}]],"length":3401,"saved":false}
{"contributors":[],"silentsave":false,"ts":1359242725149,"patch":[[{"diffs":[[0,"baseManager("],[-1,"\"webd\", \"MySql\""],[0,")\n    dicc={"]],"start1":360,"start2":360,"length1":39,"length2":24},{"diffs":[[0,"ger("],[-1,"\"webd\", \"MySql\""],[0,")\n  "]],"start1":1420,"start2":1420,"length1":23,"length2":8}]],"length":3371,"saved":false}
